{"version":3,"file":"backbone.marionette.js","sources":["src/utils/proxy.js","src/utils/extend.js","src/utils/deprecate.js","src/common/is-node-attached.js","src/common/merge-options.js","src/common/get-option.js","src/common/normalize-methods.js","src/common/trigger-method.js","src/common/monitor-view-events.js","src/error.js","src/common/bind-events.js","src/common/bind-requests.js","src/utils/set-options.js","src/mixins/common.js","src/mixins/radio.js","src/object.js","src/mixins/dom.js","src/template-cache.js","src/utils/invoke.js","src/mixins/behaviors.js","src/mixins/delegate-entity-events.js","src/utils/get-unique-event-name.js","src/mixins/triggers.js","src/mixins/ui.js","src/mixins/view.js","src/utils/destroy-backbone-view.js","src/region.js","src/common/build-region.js","src/mixins/regions.js","src/config/renderer.js","src/view.js","src/utils/emulate-collection.js","src/child-view-container.js","src/collection-view.js","src/composite-view.js","src/behavior.js","src/application.js","src/app-router.js","src/config/behaviors-lookup.js","src/config/features.js","src/backbone.marionette.js"],"sourcesContent":["//Internal utility for creating context style global utils\nconst proxy = function(method) {\n  return function(context, ...args) {\n    return method.apply(context, args);\n  };\n};\n\nexport default proxy;\n","// Marionette.extend\n// -----------------\n\nimport Backbone from 'backbone';\n\n// Borrow the Backbone `extend` method so we can use it as needed\nconst extend = Backbone.Model.extend;\n\nexport default extend;\n","/* global console */\n\nimport _ from 'underscore';\n\nimport Marionette from '../backbone.marionette';\n\nconst deprecate = function(message, test) {\n  if (_.isObject(message)) {\n    message = (\n      message.prev + ' is going to be removed in the future. ' +\n      'Please use ' + message.next + ' instead.' +\n      (message.url ? ' See: ' + message.url : '')\n    );\n  }\n\n  if (!Marionette.DEV_MODE) {\n    return;\n  }\n\n  if ((test === undefined || !test) && !deprecate._cache[message]) {\n    deprecate._warn('Deprecation warning: ' + message);\n    deprecate._cache[message] = true;\n  }\n};\n\ndeprecate._console = typeof console !== 'undefined' ? console : {};\ndeprecate._warn = function() {\n  const warn = deprecate._console.warn || deprecate._console.log || _.noop;\n  return warn.apply(deprecate._console, arguments);\n};\ndeprecate._cache = {};\n\nexport default deprecate;\n","// Marionette.isNodeAttached\n// -------------------------\n\n// Determine if `el` is a child of the document\nconst isNodeAttached = function(el) {\n  return document.documentElement.contains(el && el.parentNode);\n};\n\nexport default isNodeAttached;\n","import _ from 'underscore';\n\n// Merge `keys` from `options` onto `this`\nconst mergeOptions = function(options, keys) {\n  if (!options) { return; }\n\n  _.each(keys, (key) => {\n    const option = options[key];\n    if (option !== undefined) {\n      this[key] = option;\n    }\n  });\n};\n\nexport default mergeOptions;\n","// Marionette.getOption\n// --------------------\n\n// Retrieve an object, function or other value from the\n// object or its `options`, with `options` taking precedence.\nconst getOption = function(optionName) {\n  if (!optionName) { return; }\n  if (this.options && (this.options[optionName] !== undefined)) {\n    return this.options[optionName];\n  } else {\n    return this[optionName];\n  }\n};\n\nexport default getOption;\n","import _ from 'underscore';\n\n// Marionette.normalizeMethods\n// ----------------------\n\n// Pass in a mapping of events => functions or function names\n// and return a mapping of events => functions\nconst normalizeMethods = function(hash) {\n  return _.reduce(hash, (normalizedHash, method, name) => {\n    if (!_.isFunction(method)) {\n      method = this[method];\n    }\n    if (method) {\n      normalizedHash[name] = method;\n    }\n    return normalizedHash;\n  }, {});\n};\n\nexport default normalizeMethods;\n","// Trigger Method\n// --------------\n\nimport _ from 'underscore';\nimport getOption from './get-option';\n\n// split the event name on the \":\"\nconst splitter = /(^|:)(\\w)/gi;\n\n// take the event section (\"section1:section2:section3\")\n// and turn it in to uppercase name onSection1Section2Section3\nfunction getEventName(match, prefix, eventName) {\n  return eventName.toUpperCase();\n}\n\nconst getOnMethodName = _.memoize(function(event) {\n  return 'on' + event.replace(splitter, getEventName);\n});\n\n// Trigger an event and/or a corresponding method name. Examples:\n//\n// `this.triggerMethod(\"foo\")` will trigger the \"foo\" event and\n// call the \"onFoo\" method.\n//\n// `this.triggerMethod(\"foo:bar\")` will trigger the \"foo:bar\" event and\n// call the \"onFooBar\" method.\nexport function triggerMethod(event, ...args) {\n  // get the method name from the event name\n  const methodName = getOnMethodName(event);\n  const method = getOption.call(this, methodName);\n  let result;\n\n  // call the onMethodName if it exists\n  if (_.isFunction(method)) {\n    // pass all args, except the event name\n    result = method.apply(this, args);\n  }\n\n  // trigger the event\n  this.trigger.apply(this, arguments);\n\n  return result;\n}\n\n// triggerMethodOn invokes triggerMethod on a specific context\n//\n// e.g. `Marionette.triggerMethodOn(view, 'show')`\n// will trigger a \"show\" event or invoke onShow the view.\nexport function triggerMethodOn(context, ...args) {\n  if (_.isFunction(context.triggerMethod)) {\n    return context.triggerMethod.apply(context, args);\n  }\n\n  return triggerMethod.apply(context, args);\n}\n","// DOM Refresh\n// -----------\n\nimport _ from 'underscore';\nimport { triggerMethodOn } from './trigger-method';\n\n// Trigger method on children unless a pure Backbone.View\nfunction triggerMethodChildren(view, event, shouldTrigger) {\n  if (!view._getImmediateChildren) { return; }\n  _.each(view._getImmediateChildren(), child => {\n    if (!shouldTrigger(child)) { return; }\n    triggerMethodOn(child, event, child);\n  });\n}\n\nfunction shouldTriggerAttach(view) {\n  return !view._isAttached;\n}\n\nfunction shouldAttach(view) {\n  if (!shouldTriggerAttach(view)) { return false; }\n  view._isAttached = true;\n  return true;\n}\n\nfunction shouldTriggerDetach(view) {\n  return view._isAttached;\n}\n\nfunction shouldDetach(view) {\n  if (!shouldTriggerDetach(view)) { return false; }\n  view._isAttached = false;\n  return true;\n}\n\nfunction triggerDOMRefresh(view) {\n  if (view._isAttached && view._isRendered) {\n    triggerMethodOn(view, 'dom:refresh', view);\n  }\n}\n\nfunction handleBeforeAttach() {\n  triggerMethodChildren(this, 'before:attach', shouldTriggerAttach);\n}\n\nfunction handleAttach() {\n  triggerMethodChildren(this, 'attach', shouldAttach);\n  triggerDOMRefresh(this);\n}\n\nfunction handleBeforeDetach() {\n  triggerMethodChildren(this, 'before:detach', shouldTriggerDetach);\n}\n\nfunction handleDetach() {\n  triggerMethodChildren(this, 'detach', shouldDetach);\n}\n\nfunction handleRender() {\n  triggerDOMRefresh(this);\n}\n\n// Monitor a view's state, propagating attach/detach events to children and firing dom:refresh\n// whenever a rendered view is attached or an attached view is rendered.\nfunction monitorViewEvents(view) {\n  if (view._areViewEventsMonitored) { return; }\n\n  view._areViewEventsMonitored = true;\n\n  view.on({\n    'before:attach': handleBeforeAttach,\n    'attach': handleAttach,\n    'before:detach': handleBeforeDetach,\n    'detach': handleDetach,\n    'render': handleRender\n  });\n}\n\nexport default monitorViewEvents;\n","// Error\n// -----\n\nimport _ from 'underscore';\nimport extend from './utils/extend';\nimport {version} from '../package.json';\n\nconst errorProps = ['description', 'fileName', 'lineNumber', 'name', 'message', 'number'];\n\nconst MarionetteError = extend.call(Error, {\n  urlRoot: `http://marionettejs.com/docs/v${version}/`,\n\n  constructor(message, options) {\n    if (_.isObject(message)) {\n      options = message;\n      message = options.message;\n    } else if (!options) {\n      options = {};\n    }\n\n    const error = Error.call(this, message);\n    _.extend(this, _.pick(error, errorProps), _.pick(options, errorProps));\n\n    this.captureStackTrace();\n\n    if (options.url) {\n      this.url = this.urlRoot + options.url;\n    }\n  },\n\n  captureStackTrace() {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, MarionetteError);\n    }\n  },\n\n  toString() {\n    return this.name + ': ' + this.message + (this.url ? ' See: ' + this.url : '');\n  }\n});\n\nMarionetteError.extend = extend;\n\nexport default MarionetteError;\n","// Bind Entity Events & Unbind Entity Events\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone \"entity\" (e.g. collection/model)\n// to methods on a target object.\n//\n// The first parameter, `target`, must have the Backbone.Events module mixed in.\n//\n// The second parameter is the `entity` (Backbone.Model, Backbone.Collection or\n// any object that has Backbone.Events mixed in) to bind the events from.\n//\n// The third parameter is a hash of { \"event:name\": \"eventHandler\" }\n// configuration. Multiple handlers can be separated by a space. A\n// function can be supplied instead of a string handler name.\n\nimport _ from 'underscore';\nimport MarionetteError from '../error';\n\n// Bind/unbind the event to handlers specified as a string of\n// handler names on the target object\nfunction bindFromStrings(target, entity, evt, methods, actionName) {\n  const methodNames = methods.split(/\\s+/);\n\n  _.each(methodNames, function(methodName) {\n    const method = target[methodName];\n    if (!method) {\n      throw new MarionetteError(`Method \"${methodName}\" was configured as an event handler, but does not exist.`);\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\n// generic looping function\nfunction iterateEvents(target, entity, bindings, actionName) {\n  if (!entity || !bindings) { return; }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindevents'\n    });\n  }\n\n  // iterate the bindings and bind/unbind them\n  _.each(bindings, function(method, evt) {\n\n    // allow for a list of method names as a string\n    if (_.isString(method)) {\n      bindFromStrings(target, entity, evt, method, actionName);\n      return;\n    }\n\n    target[actionName](entity, evt, method);\n  });\n}\n\nfunction bindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'listenTo');\n  return this;\n}\n\nfunction unbindEvents(entity, bindings) {\n  iterateEvents(this, entity, bindings, 'stopListening');\n  return this;\n}\n\n// Export Public API\nexport {\n  bindEvents,\n  unbindEvents\n};\n","// Bind/Unbind Radio Requests\n// -----------------------------------------\n//\n// These methods are used to bind/unbind a backbone.radio request\n// to methods on a target object.\n//\n// The first parameter, `target`, will set the context of the reply method\n//\n// The second parameter is the `Radio.channel` to bind the reply to.\n//\n// The third parameter is a hash of { \"request:name\": \"replyHandler\" }\n// configuration. A function can be supplied instead of a string handler name.\n\nimport _ from 'underscore';\nimport normalizeMethods from './normalize-methods';\nimport MarionetteError from '../error';\n\nfunction iterateReplies(target, channel, bindings, actionName) {\n  if (!channel || !bindings) { return; }\n\n  // type-check bindings\n  if (!_.isObject(bindings)) {\n    throw new MarionetteError({\n      message: 'Bindings must be an object.',\n      url: 'marionette.functions.html#marionettebindrequests'\n    });\n  }\n\n  const normalizedRadioRequests = normalizeMethods.call(target, bindings);\n\n  channel[actionName](normalizedRadioRequests, target);\n}\n\nfunction bindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'reply');\n  return this;\n}\n\nfunction unbindRequests(channel, bindings) {\n  iterateReplies(this, channel, bindings, 'stopReplying');\n  return this;\n}\n\nexport {\n  bindRequests,\n  unbindRequests\n};\n","import _ from 'underscore';\n\n// Internal utility for setting options consistently across Mn\nconst setOptions = function(...args) {\n  this.options = _.extend({}, _.result(this, 'options'), ...args);\n};\n\nexport default setOptions;\n","import _setOptions from '../utils/set-options';\nimport getOption from '../common/get-option';\nimport mergeOptions from '../common/merge-options';\nimport normalizeMethods from '../common/normalize-methods';\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\n\nexport default {\n\n  // Imports the \"normalizeMethods\" to transform hashes of\n  // events=>function references/names to a hash of events=>function references\n  normalizeMethods: normalizeMethods,\n\n  _setOptions: _setOptions,\n\n  // A handy way to merge passed-in options onto the instance\n  mergeOptions: mergeOptions,\n\n  // Enable getting options from this or this.options by name.\n  getOption: getOption,\n\n  // Enable binding view's events from another entity.\n  bindEvents: bindEvents,\n\n  // Enable unbinding view's events from another entity.\n  unbindEvents: unbindEvents\n};\n","import _ from 'underscore';\nimport Radio from 'backbone.radio';\n\nimport {\n  bindRequests,\n  unbindRequests\n} from '../common/bind-requests';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\n\nimport MarionetteError from '../error';\n\n// MixinOptions\n// - channelName\n// - radioEvents\n// - radioRequests\n\nexport default {\n\n  _initRadio() {\n    const channelName = _.result(this, 'channelName');\n\n    if (!channelName) {\n      return;\n    }\n\n    /* istanbul ignore next */\n    if (!Radio) {\n      throw new MarionetteError({\n        name: 'BackboneRadioMissing',\n        message: 'The dependency \"backbone.radio\" is missing.'\n      });\n    }\n\n    const channel = this._channel = Radio.channel(channelName);\n\n    const radioEvents = _.result(this, 'radioEvents');\n    this.bindEvents(channel, radioEvents);\n\n    const radioRequests = _.result(this, 'radioRequests');\n    this.bindRequests(channel, radioRequests);\n\n    this.on('destroy', this._destroyRadio);\n  },\n\n  _destroyRadio() {\n    this._channel.stopReplying(null, null, this);\n  },\n\n  getChannel() {\n    return this._channel;\n  },\n\n  // Proxy `bindEvents`\n  bindEvents: bindEvents,\n\n  // Proxy `unbindEvents`\n  unbindEvents: unbindEvents,\n\n  // Proxy `bindRequests`\n  bindRequests: bindRequests,\n\n  // Proxy `unbindRequests`\n  unbindRequests: unbindRequests\n\n};\n","// Object\n// ------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport extend from './utils/extend';\nimport { triggerMethod } from './common/trigger-method';\nimport CommonMixin from './mixins/common';\nimport RadioMixin from './mixins/radio';\n\nconst ClassOptions = [\n  'channelName',\n  'radioEvents',\n  'radioRequests'\n];\n\n// A Base Class that other Classes should descend from.\n// Object borrows many conventions and utilities from Backbone.\nconst MarionetteObject = function(options) {\n  this._setOptions(options);\n  this.mergeOptions(options, ClassOptions);\n  this.cid = _.uniqueId(this.cidPrefix);\n  this._initRadio();\n  this.initialize.apply(this, arguments);\n};\n\nMarionetteObject.extend = extend;\n\n// Object Methods\n// --------------\n\n// Ensure it can trigger events with Backbone.Events\n_.extend(MarionetteObject.prototype, Backbone.Events, CommonMixin, RadioMixin, {\n  cidPrefix: 'mno',\n\n  // for parity with Marionette.AbstractView lifecyle\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return this._isDestroyed;\n  },\n\n  //this is a noop method intended to be overridden by classes that extend from this base\n  initialize() {},\n\n  destroy(...args) {\n    if (this._isDestroyed) { return this; }\n\n    this.triggerMethod('before:destroy', this, ...args);\n\n    this._isDestroyed = true;\n    this.triggerMethod('destroy', this, ...args);\n    this.stopListening();\n\n    return this;\n  },\n\n  triggerMethod: triggerMethod\n});\n\nexport default MarionetteObject;\n","// DomMixin\n//  ---------\n\nimport Backbone from 'backbone';\n\nexport default {\n  createBuffer() {\n    return document.createDocumentFragment();\n  },\n\n  appendChildren(el, children) {\n    Backbone.$(el).append(children);\n  },\n\n  beforeEl(el, sibling) {\n    Backbone.$(el).before(sibling);\n  },\n\n  replaceEl(newEl, oldEl) {\n    const parent = oldEl.parentNode;\n\n    if (!parent) {\n      return;\n    }\n\n    parent.replaceChild(newEl, oldEl);\n  },\n\n  detachContents(el) {\n    Backbone.$(el).contents().detach();\n  },\n\n  setInnerContent(el, html) {\n    Backbone.$(el).html(html);\n  },\n\n  removeEl(el) {\n    Backbone.$(el).remove();\n  },\n\n  findEls(selector, context) {\n    return Backbone.$(selector, context);\n  }\n};\n","// Template Cache\n// --------------\n\nimport _ from 'underscore';\nimport DomMixin from './mixins/dom';\nimport MarionetteError from './error';\n\n// Manage templates stored in `<script>` blocks,\n// caching them for faster access.\nconst TemplateCache = function(templateId) {\n  this.templateId = templateId;\n};\n\n// TemplateCache object-level methods. Manage the template\n// caches from these method calls instead of creating\n// your own TemplateCache instances\n_.extend(TemplateCache, {\n  templateCaches: {},\n\n  // Get the specified template by id. Either\n  // retrieves the cached version, or loads it\n  // from the DOM.\n  get(templateId, options) {\n    let cachedTemplate = this.templateCaches[templateId];\n\n    if (!cachedTemplate) {\n      cachedTemplate = new TemplateCache(templateId);\n      this.templateCaches[templateId] = cachedTemplate;\n    }\n\n    return cachedTemplate.load(options);\n  },\n\n  // Clear templates from the cache. If no arguments\n  // are specified, clears all templates:\n  // `clear()`\n  //\n  // If arguments are specified, clears each of the\n  // specified templates from the cache:\n  // `clear(\"#t1\", \"#t2\", \"...\")`\n  clear(...args) {\n    let i;\n    const length = args.length;\n\n    if (length > 0) {\n      for (i = 0; i < length; i++) {\n        delete this.templateCaches[args[i]];\n      }\n    } else {\n      this.templateCaches = {};\n    }\n  }\n});\n\n// TemplateCache instance methods, allowing each\n// template cache object to manage its own state\n// and know whether or not it has been loaded\n_.extend(TemplateCache.prototype, DomMixin, {\n\n  // Internal method to load the template\n  load(options) {\n    // Guard clause to prevent loading this template more than once\n    if (this.compiledTemplate) {\n      return this.compiledTemplate;\n    }\n\n    // Load the template and compile it\n    const template = this.loadTemplate(this.templateId, options);\n    this.compiledTemplate = this.compileTemplate(template, options);\n\n    return this.compiledTemplate;\n  },\n\n  // Load a template from the DOM, by default. Override\n  // this method to provide your own template retrieval\n  // For asynchronous loading with AMD/RequireJS, consider\n  // using a template-loader plugin as described here:\n  // https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs\n  loadTemplate(templateId, options) {\n    const $template = this.findEls(templateId);\n\n    if (!$template.length) {\n      throw new MarionetteError({\n        name: 'NoTemplateError',\n        message: `Could not find template: \"${templateId}\"`\n      });\n    }\n    return $template.html();\n  },\n\n  // Pre-compile the template before caching it. Override\n  // this method if you do not need to pre-compile a template\n  // (JST / RequireJS for example) or if you want to change\n  // the template engine used (Handebars, etc).\n  compileTemplate(rawTemplate, options) {\n    return _.template(rawTemplate, options);\n  }\n});\n\nexport default TemplateCache;\n","// Implementation of the invoke method (http://underscorejs.org/#invoke) with support for\n// lodash v3, v4, and underscore.js\nimport _ from 'underscore';\n\nexport default _.invokeMap || _.invoke;\n","import _ from 'underscore';\nimport _invoke from '../utils/invoke';\nimport { triggerMethod } from '../common/trigger-method';\nimport Marionette from '../backbone.marionette';\n\n// MixinOptions\n// - behaviors\n\n// Takes care of getting the behavior class\n// given options and a key.\n// If a user passes in options.behaviorClass\n// default to using that.\n// If a user passes in a Behavior Class directly, use that\n// Otherwise delegate the lookup to the users `behaviorsLookup` implementation.\nfunction getBehaviorClass(options, key) {\n  if (options.behaviorClass) {\n    return options.behaviorClass;\n    //treat functions as a Behavior constructor\n  } else if (_.isFunction(options)) {\n    return options;\n  }\n\n  // behaviorsLookup can be either a flat object or a method\n  if (_.isFunction(Marionette.Behaviors.behaviorsLookup)) {\n    return Marionette.Behaviors.behaviorsLookup(options, key)[key];\n  }\n\n  return Marionette.Behaviors.behaviorsLookup[key];\n}\n\n// Iterate over the behaviors object, for each behavior\n// instantiate it and get its grouped behaviors.\n// This accepts a list of behaviors in either an object or array form\nfunction parseBehaviors(view, behaviors) {\n  return _.chain(behaviors).map(function(options, key) {\n    const BehaviorClass = getBehaviorClass(options, key);\n    //if we're passed a class directly instead of an object\n    const _options = options === BehaviorClass ? {} : options;\n    const behavior = new BehaviorClass(_options, view);\n    const nestedBehaviors = parseBehaviors(view, _.result(behavior, 'behaviors'));\n\n    return [behavior].concat(nestedBehaviors);\n  }).flatten().value();\n}\n\nexport default {\n  _initBehaviors() {\n    const behaviors = _.result(this, 'behaviors');\n\n    // Behaviors defined on a view can be a flat object literal\n    // or it can be a function that returns an object.\n    this._behaviors = _.isObject(behaviors) ? parseBehaviors(this, behaviors) : {};\n  },\n\n  _getBehaviorTriggers() {\n    const triggers = _invoke(this._behaviors, 'getTriggers');\n    return _.extend({}, ...triggers);\n  },\n\n  _getBehaviorEvents() {\n    const events = _invoke(this._behaviors, 'getEvents');\n    return _.extend({}, ...events);\n  },\n\n  // proxy behavior $el to the view's $el.\n  _proxyBehaviorViewProperties() {\n    _invoke(this._behaviors, 'proxyViewProperties');\n  },\n\n  // delegate modelEvents and collectionEvents\n  _delegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'delegateEntityEvents');\n  },\n\n  // undelegate modelEvents and collectionEvents\n  _undelegateBehaviorEntityEvents() {\n    _invoke(this._behaviors, 'undelegateEntityEvents');\n  },\n\n  _destroyBehaviors(args) {\n    // Call destroy on each behavior after\n    // destroying the view.\n    // This unbinds event listeners\n    // that behaviors have registered for.\n    _invoke(this._behaviors, 'destroy', ...args);\n  },\n\n  _bindBehaviorUIElements() {\n    _invoke(this._behaviors, 'bindUIElements');\n  },\n\n  _unbindBehaviorUIElements() {\n    _invoke(this._behaviors, 'unbindUIElements');\n  },\n\n  _triggerEventOnBehaviors() {\n    const behaviors = this._behaviors;\n    // Use good ol' for as this is a very hot function\n    for (let i = 0, length = behaviors && behaviors.length; i < length; i++) {\n      triggerMethod.apply(behaviors[i], arguments);\n    }\n  }\n};\n","import _ from 'underscore';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from '../common/bind-events';\n\n// MixinOptions\n// - collectionEvents\n// - modelEvents\n\nexport default {\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  _delegateEntityEvents(model, collection) {\n    this._undelegateEntityEvents(model, collection);\n\n    const modelEvents = _.result(this, 'modelEvents');\n    bindEvents.call(this, model, modelEvents);\n\n    const collectionEvents = _.result(this, 'collectionEvents');\n    bindEvents.call(this, collection, collectionEvents);\n  },\n\n  _undelegateEntityEvents(model, collection) {\n    const modelEvents = _.result(this, 'modelEvents');\n    unbindEvents.call(this, model, modelEvents);\n\n    const collectionEvents = _.result(this, 'collectionEvents');\n    unbindEvents.call(this, collection, collectionEvents);\n  }\n};\n","import _ from 'underscore';\n\n// Borrow event splitter from Backbone\nconst delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\nfunction uniqueName(eventName, selector) {\n  return [eventName + _.uniqueId('.evt'), selector].join(' ');\n}\n\n// Set event name to be namespaced using a unique index\n// to generate a non colliding event namespace\n// http://api.jquery.com/event.namespace/\nconst getUniqueEventName = function(eventName) {\n  const match = eventName.match(delegateEventSplitter);\n  return uniqueName(match[1], match[2]);\n};\n\nexport default getUniqueEventName;\n","import _ from 'underscore';\nimport getUniqueEventName from '../utils/get-unique-event-name';\n\n// Internal method to create an event handler for a given `triggerDef` like\n// 'click:foo'\nfunction buildViewTrigger(view, triggerDef) {\n  if (_.isString(triggerDef)) {\n    triggerDef = {event: triggerDef};\n  }\n\n  const eventName = triggerDef.event;\n  const shouldPreventDefault = triggerDef.preventDefault !== false;\n  const shouldStopPropagation = triggerDef.stopPropagation !== false;\n\n  return function(e) {\n    if (shouldPreventDefault) {\n      e.preventDefault();\n    }\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n\n    view.triggerMethod(eventName, view);\n  };\n}\n\nexport default {\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  _getViewTriggers(view, triggers) {\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return _.reduce(triggers, (events, value, key) => {\n      key = getUniqueEventName(key);\n      events[key] = buildViewTrigger(view, value);\n      return events;\n    }, {});\n  }\n\n};\n","import _ from 'underscore';\n// allows for the use of the @ui. syntax within\n// a given key for triggers and events\n// swaps the @ui with the associated selector.\n// Returns a new, non-mutated, parsed events hash.\nconst normalizeUIKeys = function(hash, ui) {\n  return _.reduce(hash, (memo, val, key) => {\n    const normalizedKey = normalizeUIString(key, ui);\n    memo[normalizedKey] = val;\n    return memo;\n  }, {});\n};\n\n// utility method for parsing @ui. syntax strings\n// into associated selector\nconst normalizeUIString = function(uiString, ui) {\n  return uiString.replace(/@ui\\.[a-zA-Z-_$0-9]*/g, (r) => {\n    return ui[r.slice(4)];\n  });\n};\n\n// allows for the use of the @ui. syntax within\n// a given value for regions\n// swaps the @ui with the associated selector\nconst normalizeUIValues = function(hash, ui, properties) {\n  _.each(hash, (val, key) => {\n    if (_.isString(val)) {\n      hash[key] = normalizeUIString(val, ui);\n    } else if (_.isObject(val) && _.isArray(properties)) {\n      _.extend(val, normalizeUIValues(_.pick(val, properties), ui));\n      /* Value is an object, and we got an array of embedded property names to normalize. */\n      _.each(properties, (property) => {\n        const propertyVal = val[property];\n        if (_.isString(propertyVal)) {\n          val[property] = normalizeUIString(propertyVal, ui);\n        }\n      });\n    }\n  });\n  return hash;\n};\n\nexport default {\n\n  // normalize the keys of passed hash with the views `ui` selectors.\n  // `{\"@ui.foo\": \"bar\"}`\n  normalizeUIKeys(hash) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIKeys(hash, uiBindings);\n  },\n\n  // normalize the passed string with the views `ui` selectors.\n  // `\"@ui.bar\"`\n  normalizeUIString(uiString) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIString(uiString, uiBindings);\n  },\n\n  // normalize the values of passed hash with the views `ui` selectors.\n  // `{foo: \"@ui.bar\"}`\n  normalizeUIValues(hash, properties) {\n    const uiBindings = this._getUIBindings();\n    return normalizeUIValues(hash, uiBindings, properties);\n  },\n\n  _getUIBindings() {\n    const uiBindings = _.result(this, '_uiBindings');\n    const ui = _.result(this, 'ui');\n    return uiBindings || ui;\n  },\n\n  // This method binds the elements specified in the \"ui\" hash inside the view's code with\n  // the associated jQuery selectors.\n  _bindUIElements() {\n    if (!this.ui) { return; }\n\n    // store the ui hash in _uiBindings so they can be reset later\n    // and so re-rendering the view will be able to find the bindings\n    if (!this._uiBindings) {\n      this._uiBindings = this.ui;\n    }\n\n    // get the bindings result, as a function or otherwise\n    const bindings = _.result(this, '_uiBindings');\n\n    // empty the ui so we don't have anything to start with\n    this._ui = {};\n\n    // bind each of the selectors\n    _.each(bindings, (selector, key) => {\n      this._ui[key] = this.$(selector);\n    });\n\n    this.ui = this._ui;\n  },\n\n  _unbindUIElements() {\n    if (!this.ui || !this._uiBindings) { return; }\n\n    // delete all of the existing ui bindings\n    _.each(this.ui, ($el, name) => {\n      delete this.ui[name];\n    });\n\n    // reset the ui element to the original bindings configuration\n    this.ui = this._uiBindings;\n    delete this._uiBindings;\n    delete this._ui;\n  },\n\n  _getUI(name) {\n    return this._ui[name];\n  }\n};\n","// ViewMixin\n//  ---------\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport { triggerMethod } from '../common/trigger-method';\nimport BehaviorsMixin from './behaviors';\nimport CommonMixin from './common';\nimport DelegateEntityEventsMixin from './delegate-entity-events';\nimport TriggersMixin from './triggers';\nimport UIMixin from './ui';\nimport View from '../view';\nimport MarionetteError from '../error';\nimport DomMixin from './dom';\n\n// MixinOptions\n// - behaviors\n// - childViewEventPrefix\n// - childViewEvents\n// - childViewTriggers\n// - collectionEvents\n// - modelEvents\n// - triggers\n// - ui\n\n\nconst ViewMixin = {\n  supportsRenderLifecycle: true,\n  supportsDestroyLifecycle: true,\n\n  _isDestroyed: false,\n\n  isDestroyed() {\n    return !!this._isDestroyed;\n  },\n\n  _isRendered: false,\n\n  isRendered() {\n    return !!this._isRendered;\n  },\n\n  _isAttached: false,\n\n  isAttached() {\n    return !!this._isAttached;\n  },\n\n  // Overriding Backbone.View's `delegateEvents` to handle\n  // `events` and `triggers`\n  delegateEvents(eventsArg) {\n\n    this._proxyBehaviorViewProperties();\n    this._buildEventProxies();\n\n    const viewEvents = this._getEvents(eventsArg);\n\n    if (typeof eventsArg === 'undefined') {\n      this.events = viewEvents;\n    }\n\n    const combinedEvents = _.extend({},\n      this._getBehaviorEvents(),\n      viewEvents,\n      this._getBehaviorTriggers(),\n      this.getTriggers()\n    );\n\n    Backbone.View.prototype.delegateEvents.call(this, combinedEvents);\n\n    return this;\n  },\n\n  _getEvents(eventsArg) {\n    const events = eventsArg || this.events;\n\n    if (_.isFunction(events)) {\n      return this.normalizeUIKeys(events.call(this));\n    }\n\n    return this.normalizeUIKeys(events);\n  },\n\n  // Configure `triggers` to forward DOM events to view\n  // events. `triggers: {\"click .foo\": \"do:foo\"}`\n  getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Allow `triggers` to be configured as a function\n    const triggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    // Configure the triggers, prevent default\n    // action and stop propagation of DOM events\n    return this._getViewTriggers(this, triggers);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.model, this.collection);\n\n    // bind each behaviors model and collection events\n    this._delegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Handle unbinding `modelEvents`, and `collectionEvents` configuration\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.model, this.collection);\n\n    // unbind each behaviors model and collection events\n    this._undelegateBehaviorEntityEvents();\n\n    return this;\n  },\n\n  // Internal helper method to verify whether the view hasn't been destroyed\n  _ensureViewIsIntact() {\n    if (this._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: `View (cid: \"${this.cid}\") has already been destroyed and cannot be used.`\n      });\n    }\n  },\n\n  // Handle destroying the view and its children.\n  destroy(...args) {\n    if (this._isDestroyed) { return this; }\n    const shouldTriggerDetach = !!this._isAttached;\n\n    this.triggerMethod('before:destroy', this, ...args);\n    if (shouldTriggerDetach) {\n      this.triggerMethod('before:detach', this);\n    }\n\n    // unbind UI elements\n    this.unbindUIElements();\n\n    // remove the view from the DOM\n    this.removeEl(this.el);\n\n    if (shouldTriggerDetach) {\n      this._isAttached = false;\n      this.triggerMethod('detach', this);\n    }\n\n    // remove children after the remove to prevent extra paints\n    this._removeChildren();\n\n    this._destroyBehaviors(args);\n\n    this._isDestroyed = true;\n    this._isRendered = false;\n    this.triggerMethod('destroy', this, ...args);\n\n    this.stopListening();\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n    this._bindBehaviorUIElements();\n\n    return this;\n  },\n\n  // This method unbinds the elements specified in the \"ui\" hash\n  unbindUIElements() {\n    this._unbindUIElements();\n    this._unbindBehaviorUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    this._ensureViewIsIntact();\n    return this._getUI(name);\n  },\n\n  // used as the prefix for child view events\n  // that are forwarded through the layoutview\n  childViewEventPrefix: 'childview',\n\n  // import the `triggerMethod` to trigger events with corresponding\n  // methods if the method exists\n  triggerMethod() {\n    const ret = triggerMethod.apply(this, arguments);\n\n    this._triggerEventOnBehaviors.apply(this, arguments);\n    this._triggerEventOnParentLayout.apply(this, arguments);\n\n    return ret;\n  },\n\n  // Cache `childViewEvents` and `childViewTriggers`\n  _buildEventProxies() {\n    this._childViewEvents = _.result(this, 'childViewEvents');\n    this._childViewTriggers = _.result(this, 'childViewTriggers');\n  },\n\n  _triggerEventOnParentLayout() {\n    const layoutView = this._parentView();\n    if (!layoutView) {\n      return;\n    }\n\n    layoutView._childViewEventHandler.apply(layoutView, arguments);\n  },\n\n  // Walk the _parent tree until we find a view (if one exists).\n  // Returns the parent view hierarchically closest to this view.\n  _parentView() {\n    let parent = this._parent;\n\n    while (parent) {\n      if (parent instanceof View) {\n        return parent;\n      }\n      parent = parent._parent;\n    }\n  },\n\n  _childViewEventHandler(eventName, ...args) {\n    const childViewEvents = this.normalizeMethods(this._childViewEvents);\n\n    // call collectionView childViewEvent if defined\n    if (typeof childViewEvents !== 'undefined' && _.isFunction(childViewEvents[eventName])) {\n      childViewEvents[eventName].apply(this, args);\n    }\n\n    // use the parent view's proxyEvent handlers\n    const childViewTriggers = this._childViewTriggers;\n\n    // Call the event with the proxy name on the parent layout\n    if (childViewTriggers && _.isString(childViewTriggers[eventName])) {\n      this.triggerMethod(childViewTriggers[eventName], ...args);\n    }\n\n    const prefix = _.result(this, 'childViewEventPrefix');\n\n    if (prefix !== false) {\n      const childEventName = prefix + ':' + eventName;\n\n      this.triggerMethod(childEventName, ...args);\n    }\n  }\n};\n\n_.extend(ViewMixin, DomMixin, BehaviorsMixin, CommonMixin, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\nexport default ViewMixin;\n","import { triggerMethodOn } from '../common/trigger-method';\n\nexport default function destroyBackboneView(view) {\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'before:destroy', view);\n  }\n\n  const shouldTriggerDetach = !!view._isAttached;\n\n  if (shouldTriggerDetach) {\n    triggerMethodOn(view, 'before:detach', view);\n  }\n\n  view.remove();\n\n  if (shouldTriggerDetach) {\n    view._isAttached = false;\n    triggerMethodOn(view, 'detach', view);\n  }\n\n  view._isDestroyed = true;\n\n  if (!view.supportsDestroyLifecycle) {\n    triggerMethodOn(view, 'destroy', view);\n  }\n}\n","// Region\n// ------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport deprecate from './utils/deprecate';\nimport destroyBackboneView from './utils/destroy-backbone-view';\nimport monitorViewEvents from './common/monitor-view-events';\nimport isNodeAttached from './common/is-node-attached';\nimport { triggerMethodOn } from './common/trigger-method';\nimport MarionetteObject from './object';\nimport MarionetteError from './error';\nimport DomMixin from './mixins/dom';\n\nconst ClassOptions = [\n  'allowMissingEl',\n  'parentEl',\n  'replaceElement'\n];\n\nconst Region = MarionetteObject.extend({\n  cidPrefix: 'mnr',\n  replaceElement: false,\n  _isReplaced: false,\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    // getOption necessary because options.el may be passed as undefined\n    this._initEl = this.el = this.getOption('el');\n\n    // Handle when this.el is passed in as a $ wrapped element.\n    this.el = this.el instanceof Backbone.$ ? this.el[0] : this.el;\n\n    if (!this.el) {\n      throw new MarionetteError({\n        name: 'NoElError',\n        message: 'An \"el\" must be specified for a region.'\n      });\n    }\n\n    this.$el = this.getEl(this.el);\n    MarionetteObject.call(this, options);\n  },\n\n  // Displays a backbone view instance inside of the region. Handles calling the `render`\n  // method for you. Reads content directly from the `el` attribute. The `preventDestroy`\n  // option can be used to prevent a view from the old view being destroyed on show.\n  show(view, options) {\n    if (!this._ensureElement(options)) {\n      return;\n    }\n    this._ensureView(view);\n    if (view === this.currentView) { return this; }\n\n    this.triggerMethod('before:show', this, view, options);\n\n    monitorViewEvents(view);\n\n    this.empty(options);\n\n    // We need to listen for if a view is destroyed in a way other than through the region.\n    // If this happens we need to remove the reference to the currentView since once a view\n    // has been destroyed we can not reuse it.\n    view.on('destroy', this._empty, this);\n\n    // Make this region the view's parent.\n    // It's important that this parent binding happens before rendering so that any events\n    // the child may trigger during render can also be triggered on the child's ancestor views.\n    view._parent = this;\n\n    this._renderView(view);\n\n    this._attachView(view, options);\n\n    this.triggerMethod('show', this, view, options);\n    return this;\n  },\n\n  _renderView(view) {\n    if (view._isRendered) {\n      return;\n    }\n\n    if (!view.supportsRenderLifecycle) {\n      triggerMethodOn(view, 'before:render', view);\n    }\n\n    view.render();\n\n    if (!view.supportsRenderLifecycle) {\n      view._isRendered = true;\n      triggerMethodOn(view, 'render', view);\n    }\n  },\n\n  _attachView(view, options = {}) {\n    const shouldTriggerAttach = !view._isAttached && isNodeAttached(this.el);\n    const shouldReplaceEl = typeof options.replaceElement === 'undefined' ? !!_.result(this, 'replaceElement') : !!options.replaceElement;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    if (shouldReplaceEl) {\n      this._replaceEl(view);\n    } else {\n      this.attachHtml(view);\n    }\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n\n    this.currentView = view;\n  },\n\n  _ensureElement(options = {}) {\n    if (!_.isObject(this.el)) {\n      this.$el = this.getEl(this.el);\n      this.el = this.$el[0];\n    }\n\n    if (!this.$el || this.$el.length === 0) {\n      const allowMissingEl = typeof options.allowMissingEl === 'undefined' ? !!_.result(this, 'allowMissingEl') : !!options.allowMissingEl;\n\n      if (allowMissingEl) {\n        return false;\n      } else {\n        throw new MarionetteError(`An \"el\" must exist in DOM for this region ${this.cid}`);\n      }\n    }\n    return true;\n  },\n\n  _ensureView(view) {\n    if (!view) {\n      throw new MarionetteError({\n        name: 'ViewNotValid',\n        message: 'The view passed is undefined and therefore invalid. You must pass a view instance to show.'\n      });\n    }\n\n    if (view._isDestroyed) {\n      throw new MarionetteError({\n        name: 'ViewDestroyedError',\n        message: `View (cid: \"${view.cid}\") has already been destroyed and cannot be used.`\n      });\n    }\n  },\n\n  // Override this method to change how the region finds the DOM element that it manages. Return\n  // a jQuery selector object scoped to a provided parent el or the document if none exists.\n  getEl(el) {\n    return this.findEls(el, _.result(this, 'parentEl'));\n  },\n\n  _replaceEl(view) {\n    // always restore the el to ensure the regions el is present before replacing\n    this._restoreEl();\n\n    this.replaceEl(view.el, this.el);\n\n    this._isReplaced = true;\n  },\n\n  // Restore the region's element in the DOM.\n  _restoreEl() {\n    // There is nothing to replace\n    if (!this._isReplaced) {\n      return;\n    }\n\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this.replaceEl(this.el, view.el);\n\n    this._isReplaced = false;\n  },\n\n  // Check to see if the region's el was replaced.\n  isReplaced() {\n    return !!this._isReplaced;\n  },\n\n  // Override this method to change how the new view is appended to the `$el` that the\n  // region is managing\n  attachHtml(view) {\n    this.appendChildren(this.el, view.el);\n  },\n\n  // Destroy the current view, if there is one. If there is no current view, it does\n  // nothing and returns immediately.\n  empty(options = { allowMissingEl: true }) {\n    const view = this.currentView;\n\n    // If there is no view in the region we should only detach current html\n    if (!view) {\n      if (this._ensureElement(options)) {\n        this.detachHtml();\n      }\n      return this;\n    }\n\n    const shouldDestroy = !options.preventDestroy;\n\n    if (!shouldDestroy) {\n      deprecate('The preventDestroy option is deprecated. Use Region#detachView');\n    }\n\n    this._empty(view, shouldDestroy);\n    return this;\n  },\n\n  _empty(view, shouldDestroy) {\n    view.off('destroy', this._empty, this);\n    this.triggerMethod('before:empty', this, view);\n\n    this._restoreEl();\n\n    delete this.currentView;\n\n    if (!view._isDestroyed) {\n      this._removeView(view, shouldDestroy);\n      delete view._parent;\n    }\n\n    this.triggerMethod('empty', this, view);\n  },\n\n  _removeView(view, shouldDestroy) {\n    if (!shouldDestroy) {\n      this._detachView(view);\n      return;\n    }\n\n    if (view.destroy) {\n      view.destroy();\n    } else {\n      destroyBackboneView(view);\n    }\n  },\n\n  detachView() {\n    const view = this.currentView;\n\n    if (!view) {\n      return;\n    }\n\n    this._empty(view);\n\n    return view;\n  },\n\n  _detachView(view) {\n    const shouldTriggerDetach = !!view._isAttached;\n    if (shouldTriggerDetach) {\n      triggerMethodOn(view, 'before:detach', view);\n    }\n\n    this.detachHtml();\n\n    if (shouldTriggerDetach) {\n      view._isAttached = false;\n      triggerMethodOn(view, 'detach', view);\n    }\n  },\n\n  // Override this method to change how the region detaches current content\n  detachHtml() {\n    this.detachContents(this.el);\n  },\n\n  // Checks whether a view is currently present within the region. Returns `true` if there is\n  // and `false` if no view is present.\n  hasView() {\n    return !!this.currentView;\n  },\n\n  // Reset the region by destroying any existing view and clearing out the cached `$el`.\n  // The next time a view is shown via this region, the region will re-query the DOM for\n  // the region's `el`.\n  reset(options) {\n    this.empty(options);\n\n    if (this.$el) {\n      this.el = this._initEl;\n    }\n\n    delete this.$el;\n    return this;\n  },\n\n  destroy(options) {\n    this.reset(options);\n    return MarionetteObject.prototype.destroy.apply(this, arguments);\n  }\n});\n\n_.extend(Region.prototype, DomMixin);\n\nexport default Region;\n","import _ from 'underscore';\nimport deprecate from '../utils/deprecate';\nimport MarionetteError from '../error';\nimport Region from '../region';\n\n// return the region instance from the definition\nexport default function(definition, defaults) {\n  if (definition instanceof Region) {\n    return definition;\n  }\n\n  return buildRegionFromDefinition(definition, defaults);\n}\n\nfunction buildRegionFromDefinition(definition, defaults) {\n  const opts = _.extend({}, defaults);\n\n  if (_.isString(definition)) {\n    _.extend(opts, { el: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isFunction(definition)) {\n    _.extend(opts, { regionClass: definition });\n\n    return buildRegionFromObject(opts);\n  }\n\n  if (_.isObject(definition)) {\n    if (definition.selector) {\n      deprecate('The selector option on a Region definition object is deprecated. Use el to pass a selector string');\n    }\n\n    _.extend(opts, { el: definition.selector }, definition);\n\n    return buildRegionFromObject(opts);\n  }\n\n  throw new MarionetteError({\n    message: 'Improper region configuration type.',\n    url: 'marionette.region.html#region-configuration-types'\n  });\n}\n\nfunction buildRegionFromObject(definition) {\n  const RegionClass = definition.regionClass\n\n  const options = _.omit(definition, 'regionClass');\n\n  return new RegionClass(options);\n}\n","import _ from 'underscore';\nimport _invoke from '../utils/invoke';\nimport buildRegion from '../common/build-region';\nimport Region from '../region';\n\n// MixinOptions\n// - regions\n// - regionClass\n\nexport default {\n  regionClass: Region,\n\n  // Internal method to initialize the regions that have been defined in a\n  // `regions` attribute on this View.\n  _initRegions() {\n\n    // init regions hash\n    this.regions = this.regions || {};\n    this._regions = {};\n\n    this.addRegions(_.result(this, 'regions'));\n  },\n\n  // Internal method to re-initialize all of the regions by updating\n  // the `el` that they point to\n  _reInitRegions() {\n    _invoke(this._regions, 'reset');\n  },\n\n  // Add a single region, by name, to the View\n  addRegion(name, definition) {\n    const regions = {};\n    regions[name] = definition;\n    return this.addRegions(regions)[name];\n  },\n\n  // Add multiple regions as a {name: definition, name2: def2} object literal\n  addRegions(regions) {\n    // If there's nothing to add, stop here.\n    if (_.isEmpty(regions)) {\n      return;\n    }\n\n    // Normalize region selectors hash to allow\n    // a user to use the @ui. syntax.\n    regions = this.normalizeUIValues(regions, ['selector', 'el']);\n\n    // Add the regions definitions to the regions property\n    this.regions = _.extend({}, this.regions, regions);\n\n    return this._addRegions(regions);\n  },\n\n  // internal method to build and add regions\n  _addRegions(regionDefinitions) {\n    const defaults = {\n      regionClass: this.regionClass,\n      parentEl: _.partial(_.result, this, 'el')\n    };\n\n    return _.reduce(regionDefinitions, (regions, definition, name) => {\n      regions[name] = buildRegion(definition, defaults);\n      this._addRegion(regions[name], name);\n      return regions;\n    }, {});\n  },\n\n  _addRegion(region, name) {\n    this.triggerMethod('before:add:region', this, name, region);\n\n    region._parent = this;\n\n    this._regions[name] = region;\n\n    this.triggerMethod('add:region', this, name, region);\n  },\n\n  // Remove a single region from the View, by name\n  removeRegion(name) {\n    const region = this._regions[name];\n\n    this._removeRegion(region, name);\n\n    return region;\n  },\n\n  // Remove all regions from the View\n  removeRegions() {\n    const regions = this.getRegions();\n\n    _.each(this._regions, _.bind(this._removeRegion, this));\n\n    return regions;\n  },\n\n  _removeRegion(region, name) {\n    this.triggerMethod('before:remove:region', this, name, region);\n\n    region.destroy();\n\n    delete this.regions[name];\n    delete this._regions[name];\n\n    this.triggerMethod('remove:region', this, name, region);\n  },\n\n  // Empty all regions in the region manager, but\n  // leave them attached\n  emptyRegions() {\n    const regions = this.getRegions();\n    _invoke(regions, 'empty');\n    return regions;\n  },\n\n  // Checks to see if view contains region\n  // Accepts the region name\n  // hasRegion('main')\n  hasRegion(name) {\n    return !!this.getRegion(name);\n  },\n\n  // Provides access to regions\n  // Accepts the region name\n  // getRegion('main')\n  getRegion(name) {\n    return this._regions[name];\n  },\n\n  // Get all regions\n  getRegions() {\n    return _.clone(this._regions);\n  },\n\n  showChildView(name, view, ...args) {\n    const region = this.getRegion(name);\n    return region.show(view, ...args);\n  },\n\n  detachChildView(name) {\n    return this.getRegion(name).detachView();\n  },\n\n  getChildView(name) {\n    return this.getRegion(name).currentView;\n  }\n\n};\n","// Renderer\n// --------\n\nimport _ from 'underscore';\nimport MarionetteError from '../error';\nimport TemplateCache from '../template-cache';\n\n// Render a template with data by passing in the template\n// selector and the data to render.\nconst Renderer = {\n\n  // Render a template with data. The `template` parameter is\n  // passed to the `TemplateCache` object to retrieve the\n  // template function. Override this method to provide your own\n  // custom rendering and template handling for all of Marionette.\n  render(template, data) {\n    if (!template) {\n      throw new MarionetteError({\n        name: 'TemplateNotFoundError',\n        message: 'Cannot render the template since its false, null or undefined.'\n      });\n    }\n\n    const templateFunc = _.isFunction(template) ? template : TemplateCache.get(template);\n\n    return templateFunc(data);\n  }\n};\n\nexport default Renderer;\n","// View\n// ---------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport isNodeAttached from './common/is-node-attached';\nimport monitorViewEvents from './common/monitor-view-events';\nimport ViewMixin from './mixins/view';\nimport RegionsMixin from './mixins/regions';\nimport Renderer from './config/renderer';\n\nconst ClassOptions = [\n  'behaviors',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewTriggers',\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'regionClass',\n  'regions',\n  'template',\n  'templateAsEl',\n  'templateContext',\n  'triggers',\n  'ui'\n];\n\nconst TEMPLATE_AS_EL = 'TEMPLATE_AS_EL';\n\n// The standard view. Includes view events, automatic rendering\n// of Underscore templates, nested views, and more.\nconst View = Backbone.View.extend({\n\n  constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    if (this.templateAsEl) {\n      this.el = TEMPLATE_AS_EL;\n    }\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this._initRegions();\n\n    const args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n  },\n\n  // Serialize the view's model *or* collection, if\n  // it exists, for the template\n  serializeData() {\n    if (!this.model && !this.collection) {\n      return {};\n    }\n\n    // If we have a model, we serialize that\n    if (this.model) {\n      return this.serializeModel();\n    }\n\n    // Otherwise, we serialize the collection,\n    // making it available under the `items` property\n    return {\n      items: this.serializeCollection()\n    };\n  },\n\n  // Prepares the special `model` property of a view\n  // for being displayed in the template. By default\n  // we simply clone the attributes. Override this if\n  // you need a custom transformation for your view's model\n  serializeModel() {\n    if (!this.model) { return {}; }\n    return _.clone(this.model.attributes);\n  },\n\n  // Serialize a collection by cloning each of\n  // its model's attributes\n  serializeCollection() {\n    if (!this.collection) { return {}; }\n    return this.collection.map(function(model) { return _.clone(model.attributes); });\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // rendered or attached on setElement.\n  setElement(el) {\n    if (el === TEMPLATE_AS_EL) { return this; }\n\n    const hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isRendered = !!this.$el.length;\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    if (this._isRendered) {\n      this.bindUIElements();\n    }\n\n    return this;\n  },\n\n  // Render the view, defaulting to underscore.js templates.\n  // You can override this in your view definition to provide\n  // a very specific rendering for your view. In general, though,\n  // you should override the `Marionette.Renderer` object to\n  // change how Marionette renders views.\n  // Subsequent renders after the first will re-render all nested\n  // views.\n  render() {\n    this._ensureViewIsIntact();\n\n    this.triggerMethod('before:render', this);\n\n    // If this is not the first render call, then we need to\n    // re-initialize the `el` for each region\n    if (this._isRendered) {\n      this._reInitRegions();\n    }\n\n    this._renderTemplate();\n    this.bindUIElements();\n\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n\n    return this;\n  },\n\n  // Internal method to render the template with the serialized data\n  // and template context via the `Marionette.Renderer` object.\n  _renderTemplate() {\n    const template = this.getTemplate();\n\n    // Allow template-less views\n    if (template === false) {\n      return;\n    }\n\n    // Add in entity data and template context\n    const data = this.mixinTemplateContext(this.serializeData());\n\n    // Render and add to el\n    const html = Renderer.render(template, data, this);\n\n    if (this.templateAsEl) {\n      this.setElement(html);\n      return;\n    }\n\n    this.attachElContent(html);\n  },\n\n  // Get the template for this view\n  // instance. You can set a `template` attribute in the view\n  // definition or pass a `template: \"whatever\"` parameter in\n  // to the constructor options.\n  getTemplate() {\n    return this.template;\n  },\n\n  // Mix in template context methods. Looks for a\n  // `templateContext` attribute, which can either be an\n  // object literal, or a function that returns an object\n  // literal. All methods and attributes from this object\n  // are copies to the object passed in.\n  mixinTemplateContext(target = {}) {\n    const templateContext = _.result(this, 'templateContext');\n    return _.extend(target, templateContext);\n  },\n\n  // Attaches the content of a given view.\n  // This method can be overridden to optimize rendering,\n  // or to render in a non standard way.\n  //\n  // For example, using `innerHTML` instead of `$el.html`\n  //\n  // ```js\n  // attachElContent(html) {\n  //   this.el.innerHTML = html;\n  //   return this;\n  // }\n  // ```\n  attachElContent(html) {\n    this.setInnerContent(this.el, html);\n\n    return this;\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this.removeRegions();\n  },\n\n  _getImmediateChildren() {\n    return _.chain(this.getRegions())\n      .map('currentView')\n      .compact()\n      .value();\n  }\n});\n\n_.extend(View.prototype, ViewMixin, RegionsMixin);\n\nexport default View;\n","// Mix in methods from Underscore, for iteration, and other\n// collection related features.\n// Borrowing this code from Backbone.Collection:\n// https://github.com/jashkenas/backbone/blob/1.1.2/backbone.js#L962\n\nimport _ from 'underscore';\n\nconst methods = ['forEach', 'each', 'map', 'find', 'detect', 'filter',\n                'select', 'reject', 'every', 'all', 'some', 'any', 'include',\n                'contains', 'invoke', 'toArray', 'first', 'initial', 'rest',\n                'last', 'without', 'isEmpty', 'pluck', 'reduce'];\n\nconst emulateCollection = function(object, listProperty) {\n  _.each(methods, function(method) {\n    object[method] = function() {\n      const list = _.values(_.result(this, listProperty));\n      const args = [list].concat(_.toArray(arguments));\n      return _[method].apply(_, args);\n    };\n  });\n};\n\nexport default emulateCollection;\n","import _ from 'underscore';\nimport emulateCollection from './utils/emulate-collection';\n\n// Provide a container to store, retrieve and\n// shut down child views.\nconst Container = function(views) {\n  this._views = {};\n  this._indexByModel = {};\n  this._indexByCustom = {};\n  this._updateLength();\n\n  _.each(views, _.bind(this.add, this));\n};\n\nemulateCollection(Container.prototype, '_views');\n\n// Container Methods\n// -----------------\n\n_.extend(Container.prototype, {\n\n  // Add a view to this container. Stores the view\n  // by `cid` and makes it searchable by the model\n  // cid (and model itself). Optionally specify\n  // a custom key to store an retrieve the view.\n  add(view, customIndex) {\n    return this._add(view, customIndex)._updateLength();\n  },\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _add(view, customIndex) {\n    const viewCid = view.cid;\n\n    // store the view\n    this._views[viewCid] = view;\n\n    // index it by model\n    if (view.model) {\n      this._indexByModel[view.model.cid] = viewCid;\n    }\n\n    // index by custom\n    if (customIndex) {\n      this._indexByCustom[customIndex] = viewCid;\n    }\n\n    return this;\n  },\n\n  // Find a view by the model that was attached to\n  // it. Uses the model's `cid` to find it.\n  findByModel(model) {\n    return this.findByModelCid(model.cid);\n  },\n\n  // Find a view by the `cid` of the model that was attached to\n  // it. Uses the model's `cid` to find the view `cid` and\n  // retrieve the view using it.\n  findByModelCid(modelCid) {\n    const viewCid = this._indexByModel[modelCid];\n    return this.findByCid(viewCid);\n  },\n\n  // Find a view by a custom indexer.\n  findByCustom(index) {\n    const viewCid = this._indexByCustom[index];\n    return this.findByCid(viewCid);\n  },\n\n  // Find by index. This is not guaranteed to be a\n  // stable index.\n  findByIndex(index) {\n    return _.values(this._views)[index];\n  },\n\n  // retrieve a view by its `cid` directly\n  findByCid(cid) {\n    return this._views[cid];\n  },\n\n  // Remove a view\n  remove(view) {\n    return this._remove(view)._updateLength();\n  },\n\n  // To be used when avoiding call _updateLength\n  // When you are done adding all your new views\n  // call _updateLength\n  _remove(view) {\n    const viewCid = view.cid;\n\n    // delete model index\n    if (view.model) {\n      delete this._indexByModel[view.model.cid];\n    }\n\n    // delete custom index\n    _.some(this._indexByCustom, _.bind(function(cid, key) {\n      if (cid === viewCid) {\n        delete this._indexByCustom[key];\n        return true;\n      }\n    }, this));\n\n    // remove the view from the container\n    delete this._views[viewCid];\n\n    return this;\n  },\n\n  // Update the `.length` attribute on this container\n  _updateLength() {\n    this.length = _.size(this._views);\n\n    return this;\n  }\n});\n\nexport default Container;\n","// Collection View\n// ---------------\n\nimport _ from 'underscore';\nimport Backbone from 'backbone';\nimport destroyBackboneView from './utils/destroy-backbone-view';\nimport isNodeAttached from './common/is-node-attached';\nimport monitorViewEvents from './common/monitor-view-events';\nimport { triggerMethodOn } from './common/trigger-method';\nimport ChildViewContainer from './child-view-container';\nimport MarionetteError from './error';\nimport ViewMixin from './mixins/view';\n\nconst ClassOptions = [\n  'behaviors',\n  'childView',\n  'childViewEventPrefix',\n  'childViewEvents',\n  'childViewOptions',\n  'childViewTriggers',\n  'collectionEvents',\n  'events',\n  'filter',\n  'emptyView',\n  'emptyViewOptions',\n  'modelEvents',\n  'reorderOnSort',\n  'sort',\n  'triggers',\n  'ui',\n  'viewComparator'\n];\n\n// A view that iterates over a Backbone.Collection\n// and renders an individual child view for each model.\nconst CollectionView = Backbone.View.extend({\n\n  // flag for maintaining the sorted order of the collection\n  sort: true,\n\n  // constructor\n  // option to pass `{sort: false}` to prevent the `CollectionView` from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  //\n  // option to pass `{viewComparator: compFunction()}` to allow the `CollectionView`\n  // to use a custom sort order for the collection.\n  constructor(options) {\n    this.render = _.bind(this.render, this);\n\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    monitorViewEvents(this);\n\n    this._initBehaviors();\n    this.once('render', this._initialEvents);\n    this._initChildViewStorage();\n    this._bufferedChildren = [];\n\n    const args = Array.prototype.slice.call(arguments);\n    args[0] = this.options;\n    Backbone.View.prototype.constructor.apply(this, args);\n\n    this.delegateEntityEvents();\n  },\n\n  // Instead of inserting elements one by one into the page, it's much more performant to insert\n  // elements into a document fragment and then insert that document fragment into the page\n  _startBuffering() {\n    this._isBuffering = true;\n  },\n\n  _endBuffering() {\n    const shouldTriggerAttach = !!this._isAttached;\n    const triggerOnChildren = shouldTriggerAttach ? this._getImmediateChildren() : [];\n\n    this._isBuffering = false;\n\n    _.each(triggerOnChildren, child => {\n      triggerMethodOn(child, 'before:attach', child);\n    });\n\n    this.attachBuffer(this, this._createBuffer());\n\n    _.each(triggerOnChildren, child => {\n      child._isAttached = true;\n      triggerMethodOn(child, 'attach', child);\n    });\n\n    this._bufferedChildren = [];\n  },\n\n  _getImmediateChildren() {\n    return _.values(this.children._views);\n  },\n\n  // Configured the initial events that the collection view binds to.\n  _initialEvents() {\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.render);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n  // Handle a child added to the collection\n  _onCollectionAdd(child, collection, opts) {\n    // `index` is present when adding with `at` since BB 1.2; indexOf fallback for < 1.2\n    let index = opts.at !== undefined && (opts.index || collection.indexOf(child));\n\n    // When filtered or when there is no initial index, calculate index.\n    if (this.filter || index === false) {\n      index = _.indexOf(this._filteredSortedModels(index), child);\n    }\n\n    if (this._shouldAddChild(child, index)) {\n      this._destroyEmptyView();\n      this._addChild(child, index)\n    }\n  },\n\n  // Handle collection update model removals\n  _onCollectionUpdate(collection, options) {\n    const changes = options.changes;\n    this._removeChildModels(changes.removed);\n  },\n\n  // Remove the child views and destroy them.\n  // This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  // \"models\" is an array of models and the corresponding views\n  // will be removed and destroyed from the CollectionView\n  _removeChildModels(models, {checkEmpty} = {}) {\n    const shouldCheckEmpty = checkEmpty !== false;\n\n    // Used to determine where to update the remaining\n    // sibling view indices after these views are removed.\n    const removedViews = this._getRemovedViews(models);\n\n    if (!removedViews.length) {\n      return;\n    }\n\n    this.children._updateLength();\n\n    // decrement the index of views after this one\n    this._updateIndices(removedViews, false);\n\n    if (shouldCheckEmpty) {\n      this._checkEmpty();\n    }\n  },\n\n  // Returns the views that will be used for re-indexing\n  // through CollectionView#_updateIndices.\n  _getRemovedViews(models) {\n\n    // Returning a view means something was removed.\n    return _.reduce(models, (removingViews, model) => {\n      const view = this.children.findByModel(model);\n\n      if (!view || view._isDestroyed) {\n        return removingViews;\n      }\n\n      this._removeChildView(view);\n\n      removingViews.push(view);\n\n      return removingViews;\n    }, []);\n  },\n\n  _findGreatestIndexedView(views) {\n\n    return _.reduce(views, (greatestIndexedView, view) => {\n      // Even if the index is `undefined`, a view will get returned.\n      if (!greatestIndexedView || greatestIndexedView._index < view._index) {\n        return view;\n      }\n\n      return greatestIndexedView;\n    }, undefined);\n  },\n\n  _removeChildView(view) {\n    this.triggerMethod('before:remove:child', this, view);\n\n    this.children._remove(view);\n    if (view.destroy) {\n      view.destroy();\n    } else {\n      destroyBackboneView(view);\n    }\n\n    delete view._parent;\n    this.stopListening(view);\n    this.triggerMethod('remove:child', this, view);\n  },\n\n  // Overriding Backbone.View's `setElement` to handle\n  // if an el was previously defined. If so, the view might be\n  // attached on setElement.\n  setElement() {\n    const hasEl = !!this.el;\n\n    Backbone.View.prototype.setElement.apply(this, arguments);\n\n    if (hasEl) {\n      this._isAttached = isNodeAttached(this.el);\n    }\n\n    return this;\n  },\n\n  // Render children views. Override this method to provide your own implementation of a\n  // render function for the collection view.\n  render() {\n    this._ensureViewIsIntact();\n    this.triggerMethod('before:render', this);\n    this._renderChildren();\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  // An efficient rendering used for filtering. Instead of modifying the whole DOM for the\n  // collection view, we are only adding or removing the related childrenViews.\n  setFilter(filter, {preventRender} = {}) {\n    const canBeRendered = this._isRendered && !this._isDestroyed;\n    const filterChanged = this.filter !== filter;\n    const shouldRender = canBeRendered && filterChanged && !preventRender;\n\n    if (shouldRender) {\n      const previousModels = this._filteredSortedModels();\n      this.filter = filter;\n      const models = this._filteredSortedModels();\n      this._applyModelDeltas(models, previousModels);\n    } else {\n      this.filter = filter;\n    }\n\n    return this;\n  },\n\n  // `removeFilter` is actually an alias for removing filters.\n  removeFilter(options) {\n    return this.setFilter(null, options);\n  },\n\n  // Calculate and apply difference by cid between `models` and `previousModels`.\n  _applyModelDeltas(models, previousModels) {\n    const currentIds = {};\n    _.each(models, (model, index) => {\n      const addedChildNotExists = !this.children.findByModel(model);\n      if (addedChildNotExists) {\n        this._onCollectionAdd(model, this.collection, {at: index});\n      }\n      currentIds[model.cid] = true;\n    });\n\n    const removeModels = _.filter(previousModels, (prevModel) => {\n      return !currentIds[prevModel.cid] && this.children.findByModel(prevModel);\n    });\n\n    this._removeChildModels(removeModels);\n  },\n\n  // Reorder DOM after sorting. When your element's rendering do not use their index,\n  // you can pass reorderOnSort: true to only reorder the DOM after a sort instead of\n  // rendering all the collectionView.\n  reorder() {\n    const children = this.children;\n    const models = this._filteredSortedModels();\n\n    if (!models.length && this._showingEmptyView) { return this; }\n\n    const anyModelsAdded = _.some(models, function(model) {\n      return !children.findByModel(model);\n    });\n\n    // If there are any new models added due to filtering we need to add child views,\n    // so render as normal.\n    if (anyModelsAdded) {\n      this.render();\n    } else {\n\n      const filteredOutModels = [];\n\n      // Get the DOM nodes in the same order as the models and\n      // find the model that were children before but aren't in this new order.\n      const elsToReorder = children.reduce(function(viewEls, view) {\n        const index = _.indexOf(models, view.model);\n\n        if (index === -1) {\n          filteredOutModels.push(view.model);\n          return viewEls;\n        }\n\n        view._index = index;\n\n        viewEls[index] = view.el;\n\n        return viewEls;\n      }, new Array(models.length));\n\n      this.triggerMethod('before:reorder', this);\n\n      // Since append moves elements that are already in the DOM, appending the elements\n      // will effectively reorder them.\n      this._appendReorderedChildren(elsToReorder);\n\n      // remove any views that have been filtered out\n      this._removeChildModels(filteredOutModels);\n\n      this.triggerMethod('reorder', this);\n    }\n    return this;\n  },\n\n  // Render view after sorting. Override this method to change how the view renders\n  // after a `sort` on the collection.\n  resortView() {\n    if (this.reorderOnSort) {\n      this.reorder();\n    } else {\n      this._renderChildren();\n    }\n    return this;\n  },\n\n  // Internal method. This checks for any changes in the order of the collection.\n  // If the index of any view doesn't match, it will render.\n  _sortViews() {\n    const models = this._filteredSortedModels();\n\n    // check for any changes in sort order of views\n    const orderChanged = _.find(models, (item, index) => {\n      const view = this.children.findByModel(item);\n      return !view || view._index !== index;\n    });\n\n    if (orderChanged) {\n      this.resortView();\n    }\n  },\n\n  // Internal reference to what index a `emptyView` is.\n  _emptyViewIndex: -1,\n\n  // Internal method. Separated so that CompositeView can append to the childViewContainer\n  // if necessary\n  _appendReorderedChildren(children) {\n    this.appendChildren(this.el, children);\n  },\n\n  // Internal method. Separated so that CompositeView can have more control over events\n  // being triggered, around the rendering process\n  _renderChildren() {\n    if (this._isRendered) {\n      this._destroyEmptyView();\n      this._destroyChildren({checkEmpty: false});\n    }\n\n    const models = this._filteredSortedModels();\n    if (this.isEmpty({processedModels: models})) {\n      this._showEmptyView();\n    } else {\n      this.triggerMethod('before:render:children', this);\n      this._startBuffering();\n      this._showCollection(models);\n      this._endBuffering();\n      this.triggerMethod('render:children', this);\n    }\n  },\n\n  _createView(model, index) {\n    const ChildView = this._getChildView(model);\n    const childViewOptions = this._getChildViewOptions(model, index);\n    const view = this.buildChildView(model, ChildView, childViewOptions);\n    return view;\n  },\n\n  _setupChildView(view, index) {\n    view._parent = this;\n\n    monitorViewEvents(view);\n\n    // set up the child view event forwarding\n    this._proxyChildEvents(view);\n\n    if (this.sort) {\n      view._index = index;\n    }\n  },\n\n  // Internal method to loop through collection and show each child view.\n  _showCollection(models) {\n    _.each(models, _.bind(this._addChild, this));\n    this.children._updateLength();\n  },\n\n  // Allow the collection to be sorted by a custom view comparator\n  _filteredSortedModels(addedAt) {\n    if (!this.collection || !this.collection.length) { return []; }\n\n    const viewComparator = this.getViewComparator();\n    let models = this.collection.models;\n    addedAt = Math.min(Math.max(addedAt, 0), models.length - 1);\n\n    if (viewComparator) {\n      let addedModel;\n      // Preserve `at` location, even for a sorted view\n      if (addedAt) {\n        addedModel = models[addedAt];\n        models = models.slice(0, addedAt).concat(models.slice(addedAt + 1));\n      }\n      models = this._sortModelsBy(models, viewComparator);\n      if (addedModel) {\n        models.splice(addedAt, 0, addedModel);\n      }\n    }\n\n    // Filter after sorting in case the filter uses the index\n    models = this._filterModels(models);\n\n    return models;\n  },\n\n  getViewComparator() {\n    return this.viewComparator;\n  },\n\n  // Filter an array of models, if a filter exists\n  _filterModels(models) {\n    if (this.filter) {\n      models = _.filter(models, (model, index) => {\n        return this._shouldAddChild(model, index);\n      });\n    }\n    return models;\n  },\n\n  _sortModelsBy(models, comparator) {\n    if (typeof comparator === 'string') {\n      return _.sortBy(models, (model) => {\n        return model.get(comparator);\n      });\n    } else if (comparator.length === 1) {\n      return _.sortBy(models, _.bind(comparator, this));\n    } else {\n      return models.sort(_.bind(comparator, this));\n    }\n  },\n\n  // Internal method to show an empty view in place of a collection of child views,\n  // when the collection is empty\n  _showEmptyView() {\n    const EmptyView = this._getEmptyView();\n\n    if (EmptyView && !this._showingEmptyView) {\n      this._showingEmptyView = true;\n\n      const model = new Backbone.Model();\n      let emptyViewOptions =\n        this.emptyViewOptions || this.childViewOptions;\n      if (_.isFunction(emptyViewOptions)) {\n        emptyViewOptions = emptyViewOptions.call(this, model, this._emptyViewIndex);\n      }\n\n      const view = this.buildChildView(model, EmptyView, emptyViewOptions);\n\n      this.triggerMethod('before:render:empty', this, view);\n      this.addChildView(view, 0);\n      this.triggerMethod('render:empty', this, view);\n    }\n  },\n\n  // Internal method to destroy an existing emptyView instance if one exists. Called when\n  // a collection view has been rendered empty, and then a child is added to the collection.\n  _destroyEmptyView() {\n    if (this._showingEmptyView) {\n      this.triggerMethod('before:remove:empty', this);\n\n      this._destroyChildren();\n      delete this._showingEmptyView;\n\n      this.triggerMethod('remove:empty', this);\n    }\n  },\n\n  // Retrieve the empty view class\n  _getEmptyView() {\n    const emptyView = this.emptyView;\n\n    if (!emptyView) { return; }\n\n    return this._getView(emptyView);\n  },\n\n  // Retrieve the `childView` class\n  // The `childView` property can be either a view class or a function that\n  // returns a view class. If it is a function, it will receive the model that\n  // will be passed to the view instance (created from the returned view class)\n  _getChildView(child) {\n    let childView = this.childView;\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'NoChildViewError',\n        message: 'A \"childView\" must be specified'\n      });\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n  // First check if the `view` is a view class (the common case)\n  // Then check if it's a function (which we assume that returns a view class)\n  _getView(view, child) {\n    if (view.prototype instanceof Backbone.View || view === Backbone.View) {\n      return view;\n    } else if (_.isFunction(view)) {\n      return view.call(this, child);\n    }\n  },\n\n  // Internal method for building and adding a child view\n  _addChild(child, index) {\n    const view = this._createView(child, index);\n    this.addChildView(view, index);\n\n    return view;\n  },\n\n  _getChildViewOptions(child, index) {\n    if (_.isFunction(this.childViewOptions)) {\n      return this.childViewOptions(child, index);\n    }\n\n    return this.childViewOptions;\n  },\n\n  // Render the child's view and add it to the HTML for the collection view at a given index.\n  // This will also update the indices of later views in the collection in order to keep the\n  // children in sync with the collection.\n  addChildView(view, index) {\n    this.triggerMethod('before:add:child', this, view);\n    this._setupChildView(view, index);\n\n    // Store the child view itself so we can properly remove and/or destroy it later\n    if (this._isBuffering) {\n      // Add to children, but don't update children's length.\n      this.children._add(view);\n    } else {\n      // increment indices of views after this one\n      this._updateIndices(view, true);\n      this.children.add(view);\n    }\n\n    this._renderView(view);\n\n    this._attachView(view, index);\n\n    this.triggerMethod('add:child', this, view);\n\n    return view;\n  },\n\n  // Internal method. This decrements or increments the indices of views after the added/removed\n  // view to keep in sync with the collection.\n  _updateIndices(views, increment) {\n    if (!this.sort) {\n      return;\n    }\n\n    const view = _.isArray(views) ? this._findGreatestIndexedView(views) : views;\n\n    // update the indexes of views after this one\n    this.children.each((laterView) => {\n      if (laterView._index >= view._index) {\n        laterView._index += increment ? 1 : -1;\n      }\n    });\n  },\n\n  _renderView(view) {\n    if (view._isRendered) {\n      return;\n    }\n\n    if (!view.supportsRenderLifecycle) {\n      triggerMethodOn(view, 'before:render', view);\n    }\n\n    view.render();\n\n    if (!view.supportsRenderLifecycle) {\n      view._isRendered = true;\n      triggerMethodOn(view, 'render', view);\n    }\n  },\n\n  _attachView(view, index) {\n    // Only trigger attach if already attached and not buffering,\n    // otherwise _endBuffering() or Region#show() handles this.\n    const shouldTriggerAttach = !view._isAttached && !this._isBuffering && this._isAttached;\n\n    if (shouldTriggerAttach) {\n      triggerMethodOn(view, 'before:attach', view);\n    }\n\n    this.attachHtml(this, view, index);\n\n    if (shouldTriggerAttach) {\n      view._isAttached = true;\n      triggerMethodOn(view, 'attach', view);\n    }\n  },\n\n  // Build a `childView` for a model in the collection.\n  buildChildView(child, ChildViewClass, childViewOptions) {\n    const options = _.extend({model: child}, childViewOptions);\n    return new ChildViewClass(options);\n  },\n\n  // Remove the child view and destroy it. This function also updates the indices of later views\n  // in the collection in order to keep the children in sync with the collection.\n  removeChildView(view) {\n    if (!view || view._isDestroyed) {\n      return view;\n    }\n\n    this._removeChildView(view);\n    this.children._updateLength();\n    // decrement the index of views after this one\n    this._updateIndices(view, false);\n    return view;\n  },\n\n  // check if the collection is empty or optionally whether an array of pre-processed models is empty\n  isEmpty(options) {\n    let models;\n    if (_.result(options, 'processedModels')) {\n      models = options.processedModels;\n    } else {\n      models = this.collection ? this.collection.models : [];\n      models = this._filterModels(models);\n    }\n    return models.length === 0;\n  },\n\n  // If empty, show the empty view\n  _checkEmpty() {\n    if (this.isEmpty()) {\n      this._showEmptyView();\n    }\n  },\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer(collectionView, buffer) {\n    this.appendChildren(collectionView.el, buffer);\n  },\n\n  // Create a fragment buffer from the currently buffered children\n  _createBuffer() {\n    const elBuffer = this.createBuffer();\n    _.each(this._bufferedChildren, (b) => {\n      this.appendChildren(elBuffer, b.el);\n    });\n    return elBuffer;\n  },\n\n  // Append the HTML to the collection's `el`. Override this method to do something other\n  // than `.append`.\n  attachHtml(collectionView, childView, index) {\n    if (collectionView._isBuffering) {\n      // buffering happens on reset events and initial renders\n      // in order to reduce the number of inserts into the\n      // document, which are expensive.\n      collectionView._bufferedChildren.splice(index, 0, childView);\n    } else {\n      // If we've already rendered the main collection, append\n      // the new child into the correct order if we need to. Otherwise\n      // append to the end.\n      if (!collectionView._insertBefore(childView, index)) {\n        collectionView._insertAfter(childView);\n      }\n    }\n  },\n\n  // Internal method. Check whether we need to insert the view into the correct position.\n  _insertBefore(childView, index) {\n    let currentView;\n    const findPosition = this.sort && (index < this.children.length - 1);\n    if (findPosition) {\n      // Find the view after this one\n      currentView = this.children.find((view) => {\n        return view._index === index + 1;\n      });\n    }\n\n    if (currentView) {\n      this.beforeEl(currentView.el, childView.el);\n      return true;\n    }\n\n    return false;\n  },\n\n  // Internal method. Append a view to the end of the $el\n  _insertAfter(childView) {\n    this.appendChildren(this.el, childView.el);\n  },\n\n  // Internal method to set up the `children` object for storing all of the child views\n  _initChildViewStorage() {\n    this.children = new ChildViewContainer();\n  },\n\n  // called by ViewMixin destroy\n  _removeChildren() {\n    this._destroyChildren({checkEmpty: false});\n  },\n\n  // Destroy the child views that this collection view is holding on to, if any\n  _destroyChildren(options) {\n    if (!this.children.length) {\n      return;\n    }\n\n    this.triggerMethod('before:destroy:children', this);\n    const childModels = this.children.map('model');\n    this._removeChildModels(childModels, options);\n    this.triggerMethod('destroy:children', this);\n  },\n\n  // Return true if the given child should be shown. Return false otherwise.\n  // The filter will be passed (child, index, collection), where\n  //  'child' is the given model\n  //  'index' is the index of that model in the collection\n  //  'collection' is the collection referenced by this CollectionView\n  _shouldAddChild(child, index) {\n    const filter = this.filter;\n    return !_.isFunction(filter) || filter.call(this, child, index, this.collection);\n  },\n\n  // Set up the child view event forwarding. Uses a \"childview:\" prefix in front of all forwarded events.\n  _proxyChildEvents(view) {\n    this.listenTo(view, 'all', this._childViewEventHandler);\n  }\n});\n\n_.extend(CollectionView.prototype, ViewMixin);\n\nexport default CollectionView;\n","// Composite View\n// --------------\n\nimport _ from 'underscore';\nimport deprecate from './utils/deprecate';\nimport MarionetteError from './error';\nimport CollectionView from './collection-view';\nimport View from './view';\n\nconst ClassOptions = [\n  'childViewContainer',\n  'template',\n  'templateContext'\n];\n\n// Used for rendering a branch-leaf, hierarchical structure.\n// Extends directly from CollectionView\n// @deprecated\nconst CompositeView = CollectionView.extend({\n\n  // Setting up the inheritance chain which allows changes to\n  // Marionette.CollectionView.prototype.constructor which allows overriding\n  // option to pass '{sort: false}' to prevent the CompositeView from\n  // maintaining the sorted order of the collection.\n  // This will fallback onto appending childView's to the end.\n  constructor(options) {\n    deprecate('CompositeView is deprecated. Convert to View at your earliest convenience');\n\n    this.mergeOptions(options, ClassOptions);\n\n    CollectionView.prototype.constructor.apply(this, arguments);\n  },\n\n  // Configured the initial events that the composite view\n  // binds to. Override this method to prevent the initial\n  // events, or to add your own initial events.\n  _initialEvents() {\n\n    // Bind only after composite view is rendered to avoid adding child views\n    // to nonexistent childViewContainer\n\n    if (this.collection) {\n      this.listenTo(this.collection, 'add', this._onCollectionAdd);\n      this.listenTo(this.collection, 'update', this._onCollectionUpdate);\n      this.listenTo(this.collection, 'reset', this.renderChildren);\n\n      if (this.sort) {\n        this.listenTo(this.collection, 'sort', this._sortViews);\n      }\n    }\n  },\n\n  // Retrieve the `childView` to be used when rendering each of\n  // the items in the collection. The default is to return\n  // `this.childView` or Marionette.CompositeView if no `childView`\n  // has been defined. As happens in CollectionView, `childView` can\n  // be a function (which should return a view class).\n  _getChildView(child) {\n    let childView = this.childView;\n\n    // for CompositeView, if `childView` is not specified, we'll get the same\n    // composite view class rendered for each child in the collection\n    // then check if the `childView` is a view class (the common case)\n    // finally check if it's a function (which we assume that returns a view class)\n    if (!childView) {\n      return this.constructor;\n    }\n\n    childView = this._getView(childView, child);\n\n    if (!childView) {\n      throw new MarionetteError({\n        name: 'InvalidChildViewError',\n        message: '\"childView\" must be a view class or a function that returns a view class'\n      });\n    }\n\n    return childView;\n  },\n\n  // Return the serialized model\n  serializeData() {\n    return this.serializeModel();\n  },\n\n  // Renders the model and the collection.\n  render() {\n    this._ensureViewIsIntact();\n    this._isRendering = true;\n    this.resetChildViewContainer();\n\n    this.triggerMethod('before:render', this);\n\n    this._renderTemplate();\n    this.bindUIElements();\n    this.renderChildren();\n\n    this._isRendering = false;\n    this._isRendered = true;\n    this.triggerMethod('render', this);\n    return this;\n  },\n\n  renderChildren() {\n    if (this._isRendered || this._isRendering) {\n      CollectionView.prototype._renderChildren.call(this);\n    }\n  },\n\n  // You might need to override this if you've overridden attachHtml\n  attachBuffer(compositeView, buffer) {\n    const $container = this.getChildViewContainer(compositeView);\n    this.appendChildren($container, buffer);\n  },\n\n  // Internal method. Append a view to the end of the $el.\n  // Overidden from CollectionView to ensure view is appended to\n  // childViewContainer\n  _insertAfter(childView) {\n    const $container = this.getChildViewContainer(this, childView);\n    this.appendChildren($container, childView.el);\n  },\n\n  // Internal method. Append reordered childView'.\n  // Overidden from CollectionView to ensure reordered views\n  // are appended to childViewContainer\n  _appendReorderedChildren(children) {\n    const $container = this.getChildViewContainer(this);\n    this.appendChildren($container, children);\n  },\n\n  // Internal method to ensure an `$childViewContainer` exists, for the\n  // `attachHtml` method to use.\n  getChildViewContainer(containerView, childView) {\n    if (!!containerView.$childViewContainer) {\n      return containerView.$childViewContainer;\n    }\n\n    let container;\n    const childViewContainer = containerView.childViewContainer;\n    if (childViewContainer) {\n\n      const selector = _.result(containerView, 'childViewContainer');\n\n      if (selector.charAt(0) === '@' && containerView.ui) {\n        container = containerView.ui[selector.substr(4)];\n      } else {\n        container = this.findEls(selector, containerView.$el);\n      }\n\n      if (container.length <= 0) {\n        throw new MarionetteError({\n          name: 'ChildViewContainerMissingError',\n          message: `The specified \"childViewContainer\" was not found: ${containerView.childViewContainer}`\n        });\n      }\n\n    } else {\n      container = containerView.$el;\n    }\n\n    containerView.$childViewContainer = container;\n    return container;\n  },\n\n  // Internal method to reset the `$childViewContainer` on render\n  resetChildViewContainer() {\n    if (this.$childViewContainer) {\n      this.$childViewContainer = undefined;\n    }\n  }\n});\n\n// To prevent duplication but allow the best View organization\n// Certain View methods are mixed directly into the deprecated CompositeView\nconst MixinFromView = _.pick(View.prototype, 'serializeModel', 'getTemplate', '_renderTemplate', 'mixinTemplateContext', 'attachElContent');\n_.extend(CompositeView.prototype, MixinFromView);\n\nexport default CompositeView;\n","// Behavior\n// --------\n\n// A Behavior is an isolated set of DOM /\n// user interactions that can be mixed into any View.\n// Behaviors allow you to blackbox View specific interactions\n// into portable logical chunks, keeping your views simple and your code DRY.\n\nimport _ from 'underscore';\nimport getUniqueEventName from './utils/get-unique-event-name';\nimport MarionetteObject from './object';\nimport DelegateEntityEventsMixin from './mixins/delegate-entity-events';\nimport TriggersMixin from './mixins/triggers';\nimport UIMixin from './mixins/ui';\n\nconst ClassOptions = [\n  'collectionEvents',\n  'events',\n  'modelEvents',\n  'triggers',\n  'ui'\n];\n\nconst Behavior = MarionetteObject.extend({\n  cidPrefix: 'mnb',\n\n  constructor(options, view) {\n    // Setup reference to the view.\n    // this comes in handle when a behavior\n    // wants to directly talk up the chain\n    // to the view.\n    this.view = view;\n    this.defaults = _.clone(_.result(this, 'defaults', {}));\n    this._setOptions(this.defaults, options);\n    this.mergeOptions(this.options, ClassOptions);\n\n    // Construct an internal UI hash using\n    // the behaviors UI hash and then the view UI hash.\n    // This allows the user to use UI hash elements\n    // defined in the parent view as well as those\n    // defined in the given behavior.\n    // This order will help the reuse and share of a behavior\n    // between multiple views, while letting a view override a\n    // selector under an UI key.\n    this.ui = _.extend({}, _.result(this, 'ui'), _.result(view, 'ui'));\n\n    MarionetteObject.apply(this, arguments);\n  },\n\n  // proxy behavior $ method to the view\n  // this is useful for doing jquery DOM lookups\n  // scoped to behaviors view.\n  $() {\n    return this.view.$.apply(this.view, arguments);\n  },\n\n  // Stops the behavior from listening to events.\n  // Overrides Object#destroy to prevent additional events from being triggered.\n  destroy() {\n    this.stopListening();\n\n    return this;\n  },\n\n  proxyViewProperties() {\n    this.$el = this.view.$el;\n    this.el = this.view.el;\n\n    return this;\n  },\n\n  bindUIElements() {\n    this._bindUIElements();\n\n    return this;\n  },\n\n  unbindUIElements() {\n    this._unbindUIElements();\n\n    return this;\n  },\n\n  getUI(name) {\n    this.view._ensureViewIsIntact();\n    return this._getUI(name);\n  },\n\n  // Handle `modelEvents`, and `collectionEvents` configuration\n  delegateEntityEvents() {\n    this._delegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  undelegateEntityEvents() {\n    this._undelegateEntityEvents(this.view.model, this.view.collection);\n\n    return this;\n  },\n\n  getEvents() {\n    // Normalize behavior events hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorEvents = this.normalizeUIKeys(_.result(this, 'events'));\n\n    // binds the handler to the behavior and builds a unique eventName\n    return _.reduce(behaviorEvents, (events, behaviorHandler, key) => {\n      if (!_.isFunction(behaviorHandler)) {\n        behaviorHandler = this[behaviorHandler];\n      }\n      if (!behaviorHandler) { return; }\n      key = getUniqueEventName(key);\n      events[key] = _.bind(behaviorHandler, this);\n      return events;\n    }, {});\n  },\n\n  // Internal method to build all trigger handlers for a given behavior\n  getTriggers() {\n    if (!this.triggers) { return; }\n\n    // Normalize behavior triggers hash to allow\n    // a user to use the @ui. syntax.\n    const behaviorTriggers = this.normalizeUIKeys(_.result(this, 'triggers'));\n\n    return this._getViewTriggers(this.view, behaviorTriggers);\n  }\n\n});\n\n_.extend(Behavior.prototype, DelegateEntityEventsMixin, TriggersMixin, UIMixin);\n\nexport default Behavior;\n","// Application\n// -----------\nimport buildRegion from './common/build-region';\nimport MarionetteObject from './object';\nimport Region from './region';\n\nconst ClassOptions = [\n  'region',\n  'regionClass'\n];\n\n// A container for a Marionette application.\nconst Application = MarionetteObject.extend({\n  cidPrefix: 'mna',\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    this._initRegion();\n\n    MarionetteObject.prototype.constructor.apply(this, arguments);\n  },\n\n  regionClass: Region,\n\n  _initRegion() {\n    const region = this.region;\n\n    if (!region) { return; }\n\n    const defaults = {\n      regionClass: this.regionClass\n    };\n\n    this._region = buildRegion(region, defaults);\n  },\n\n  getRegion() {\n    return this._region;\n  },\n\n  showView(view, ...args) {\n    const region = this.getRegion();\n    return region.show(view, ...args);\n  },\n\n  getView() {\n    return this.getRegion().currentView;\n  },\n\n  // kick off all of the application's processes.\n  start(options) {\n    this.triggerMethod('before:start', this, options);\n    this.triggerMethod('start', this, options);\n    return this;\n  }\n\n});\n\nexport default Application;\n","// App Router\n// ----------\n\n// Reduce the boilerplate code of handling route events\n// and then calling a single method on another object,\n// called a controller.\n// Have your routers configured to call the method on\n// your controller, directly.\n//\n// Configure an AppRouter with `appRoutes`.\n//\n// App routers can only take one `controller` object.\n// It is recommended that you divide your controller\n// objects in to smaller pieces of related functionality\n// and have multiple routers / controllers, instead of\n// just one giant router and controller.\n//\n// You can also add standard routes to an AppRouter.\n\nimport Backbone from 'backbone';\nimport _ from 'underscore';\nimport { triggerMethod } from './common/trigger-method';\nimport MarionetteError from './error';\nimport CommonMixin from './mixins/common';\n\nconst ClassOptions = [\n  'appRoutes',\n  'controller'\n];\n\nconst AppRouter = Backbone.Router.extend({\n\n  constructor(options) {\n    this._setOptions(options);\n\n    this.mergeOptions(options, ClassOptions);\n\n    Backbone.Router.apply(this, arguments);\n\n    const appRoutes = this.appRoutes;\n    const controller = this._getController();\n    this.processAppRoutes(controller, appRoutes);\n    this.on('route', this._processOnRoute, this);\n  },\n\n  // Similar to route method on a Backbone Router but\n  // method is called on the controller\n  appRoute(route, methodName) {\n    const controller = this._getController();\n    this._addAppRoute(controller, route, methodName);\n    return this;\n  },\n\n  // process the route event and trigger the onRoute\n  // method call, if it exists\n  _processOnRoute(routeName, routeArgs) {\n    // make sure an onRoute before trying to call it\n    if (_.isFunction(this.onRoute)) {\n      // find the path that matches the current route\n      const routePath = _.invert(this.appRoutes)[routeName];\n      this.onRoute(routeName, routePath, routeArgs);\n    }\n  },\n\n  // Internal method to process the `appRoutes` for the\n  // router, and turn them in to routes that trigger the\n  // specified method on the specified `controller`.\n  processAppRoutes(controller, appRoutes) {\n    if (!appRoutes) { return this; }\n\n    const routeNames = _.keys(appRoutes).reverse(); // Backbone requires reverted order of routes\n\n    _.each(routeNames, route => {\n      this._addAppRoute(controller, route, appRoutes[route]);\n    });\n\n    return this;\n  },\n\n  _getController() {\n    return this.controller;\n  },\n\n  _addAppRoute(controller, route, methodName) {\n    const method = controller[methodName];\n\n    if (!method) {\n      throw new MarionetteError(`Method \"${methodName}\" was not found on the controller`);\n    }\n\n    this.route(route, methodName, _.bind(method, controller));\n  },\n\n  triggerMethod: triggerMethod\n});\n\n_.extend(AppRouter.prototype, CommonMixin);\n\nexport default AppRouter;\n","import MarionetteError from '../error';\n\n// Placeholder method to be extended by the user.\n// The method should define the object that stores the behaviors.\n// i.e.\n//\n// ```js\n// Marionette.Behaviors.behaviorsLookup: function() {\n//   return App.Behaviors\n// }\n// ```\nexport default function behaviorsLookup() {\n  throw new MarionetteError({\n    message: 'You must define where your behaviors are stored.',\n    url: 'marionette.behaviors.md#behaviorslookup'\n  });\n}\n","// Add Feature flags here\n// e.g. 'class' => false\nconst FEATURES = {\n};\n\nfunction isEnabled(name) {\n  return !!FEATURES[name];\n}\n\nfunction setEnabled(name, state) {\n  return FEATURES[name] = state;\n}\n\nexport {\n  FEATURES,\n  setEnabled,\n  isEnabled\n};\n","import Backbone from 'backbone';\nimport {version} from '../package.json';\n\nimport proxy from './utils/proxy';\nimport extend from './utils/extend';\nimport deprecate from './utils/deprecate';\n\nimport isNodeAttached from './common/is-node-attached';\nimport mergeOptions from './common/merge-options';\nimport getOption from './common/get-option';\nimport normalizeMethods from './common/normalize-methods';\nimport monitorViewEvents from './common/monitor-view-events';\n\nimport {\n  bindEvents,\n  unbindEvents\n} from './common/bind-events';\n\nimport {\n  bindRequests,\n  unbindRequests\n} from './common/bind-requests';\n\nimport {\n  triggerMethod,\n  triggerMethodOn\n} from './common/trigger-method';\n\n\nimport MarionetteObject from './object';\nimport TemplateCache from './template-cache';\nimport View from './view';\nimport CollectionView from './collection-view';\nimport CompositeView from './composite-view';\nimport Behavior from './behavior';\nimport Region from './region';\nimport Application from './application';\nimport AppRouter from './app-router';\nimport MarionetteError from './error';\n\nimport behaviorsLookup from './config/behaviors-lookup';\nimport Renderer from './config/renderer';\n\nimport {\n  FEATURES,\n  isEnabled,\n  setEnabled\n} from './config/features';\n\nconst previousMarionette = Backbone.Marionette;\nconst Marionette = Backbone.Marionette = {};\n\n// This allows you to run multiple instances of Marionette on the same\n// webapp. After loading the new version, call `noConflict()` to\n// get a reference to it. At the same time the old version will be\n// returned to Backbone.Marionette.\nMarionette.noConflict = function() {\n  Backbone.Marionette = previousMarionette;\n  return this;\n};\n\n// Utilities\nMarionette.bindEvents = proxy(bindEvents);\nMarionette.unbindEvents = proxy(unbindEvents);\nMarionette.bindRequests = proxy(bindRequests);\nMarionette.unbindRequests = proxy(unbindRequests);\nMarionette.mergeOptions = proxy(mergeOptions);\nMarionette.getOption = proxy(getOption);\nMarionette.normalizeMethods = proxy(normalizeMethods);\nMarionette.extend = extend;\nMarionette.isNodeAttached = isNodeAttached;\nMarionette.deprecate = deprecate;\nMarionette.triggerMethod = proxy(triggerMethod);\nMarionette.triggerMethodOn = triggerMethodOn;\nMarionette.isEnabled = isEnabled;\nMarionette.setEnabled = setEnabled;\nMarionette.monitorViewEvents = monitorViewEvents;\n\nMarionette.Behaviors = {};\nMarionette.Behaviors.behaviorsLookup = behaviorsLookup;\n\n// Classes\nMarionette.Application = Application;\nMarionette.AppRouter = AppRouter;\nMarionette.Renderer = Renderer;\nMarionette.TemplateCache = TemplateCache;\nMarionette.View = View;\nMarionette.CollectionView = CollectionView;\nMarionette.CompositeView = CompositeView;\nMarionette.Behavior = Behavior;\nMarionette.Region = Region;\nMarionette.Error = MarionetteError;\nMarionette.Object = MarionetteObject;\n\n// Configuration\nMarionette.DEV_MODE = false;\nMarionette.FEATURES = FEATURES;\nMarionette.VERSION = version;\n\nexport default Marionette;\n"],"names":["proxy","method","context","args","apply","extend","Backbone","Model","deprecate","message","test","_","isObject","prev","next","url","Marionette","DEV_MODE","undefined","_cache","_warn","_console","console","warn","log","noop","arguments","isNodeAttached","el","document","documentElement","contains","parentNode","mergeOptions","options","keys","each","key","option","getOption","optionName","normalizeMethods","hash","reduce","normalizedHash","name","isFunction","splitter","getEventName","match","prefix","eventName","toUpperCase","getOnMethodName","memoize","event","replace","triggerMethod","methodName","call","result","trigger","triggerMethodOn","triggerMethodChildren","view","shouldTrigger","_getImmediateChildren","child","shouldTriggerAttach","_isAttached","shouldAttach","shouldTriggerDetach","shouldDetach","triggerDOMRefresh","_isRendered","handleBeforeAttach","handleAttach","handleBeforeDetach","handleDetach","handleRender","monitorViewEvents","_areViewEventsMonitored","on","errorProps","MarionetteError","Error","version","error","pick","captureStackTrace","urlRoot","bindFromStrings","target","entity","evt","methods","actionName","methodNames","split","iterateEvents","bindings","isString","bindEvents","unbindEvents","iterateReplies","channel","normalizedRadioRequests","bindRequests","unbindRequests","setOptions","_setOptions","channelName","Radio","_channel","radioEvents","radioRequests","_destroyRadio","stopReplying","ClassOptions","MarionetteObject","cid","uniqueId","cidPrefix","_initRadio","initialize","prototype","Events","CommonMixin","RadioMixin","_isDestroyed","stopListening","createDocumentFragment","children","$","append","sibling","before","newEl","oldEl","parent","replaceChild","contents","detach","html","remove","selector","TemplateCache","templateId","cachedTemplate","templateCaches","load","i","length","DomMixin","compiledTemplate","template","loadTemplate","compileTemplate","$template","findEls","rawTemplate","invokeMap","invoke","getBehaviorClass","behaviorClass","Behaviors","behaviorsLookup","parseBehaviors","behaviors","chain","map","BehaviorClass","_options","behavior","nestedBehaviors","concat","flatten","value","_behaviors","triggers","_invoke","events","model","collection","_undelegateEntityEvents","modelEvents","collectionEvents","delegateEventSplitter","uniqueName","join","getUniqueEventName","buildViewTrigger","triggerDef","shouldPreventDefault","preventDefault","shouldStopPropagation","stopPropagation","e","normalizeUIKeys","ui","memo","val","normalizedKey","normalizeUIString","uiString","r","slice","normalizeUIValues","properties","isArray","property","propertyVal","uiBindings","_getUIBindings","_uiBindings","_ui","$el","ViewMixin","eventsArg","_proxyBehaviorViewProperties","_buildEventProxies","viewEvents","_getEvents","combinedEvents","_getBehaviorEvents","_getBehaviorTriggers","getTriggers","View","delegateEvents","_getViewTriggers","_delegateEntityEvents","_delegateBehaviorEntityEvents","_undelegateBehaviorEntityEvents","unbindUIElements","removeEl","_removeChildren","_destroyBehaviors","_bindUIElements","_bindBehaviorUIElements","_unbindUIElements","_unbindBehaviorUIElements","_ensureViewIsIntact","_getUI","ret","_triggerEventOnBehaviors","_triggerEventOnParentLayout","_childViewEvents","_childViewTriggers","layoutView","_parentView","_childViewEventHandler","_parent","childViewEvents","childViewTriggers","childEventName","BehaviorsMixin","DelegateEntityEventsMixin","TriggersMixin","UIMixin","destroyBackboneView","supportsDestroyLifecycle","Region","_initEl","getEl","_ensureElement","_ensureView","currentView","empty","_empty","_renderView","_attachView","supportsRenderLifecycle","render","shouldReplaceEl","replaceElement","_replaceEl","attachHtml","allowMissingEl","_restoreEl","replaceEl","_isReplaced","appendChildren","detachHtml","shouldDestroy","preventDestroy","off","_removeView","_detachView","destroy","detachContents","reset","definition","defaults","buildRegionFromDefinition","opts","buildRegionFromObject","regionClass","RegionClass","omit","regions","_regions","addRegions","isEmpty","_addRegions","regionDefinitions","partial","buildRegion","_addRegion","region","_removeRegion","getRegions","bind","getRegion","clone","show","detachView","Renderer","data","templateFunc","get","TEMPLATE_AS_EL","templateAsEl","_initBehaviors","_initRegions","Array","constructor","delegateEntityEvents","serializeModel","serializeCollection","attributes","hasEl","setElement","bindUIElements","_reInitRegions","_renderTemplate","getTemplate","mixinTemplateContext","serializeData","attachElContent","templateContext","setInnerContent","removeRegions","compact","RegionsMixin","emulateCollection","object","listProperty","list","values","toArray","Container","views","_views","_indexByModel","_indexByCustom","_updateLength","add","customIndex","_add","viewCid","findByModelCid","modelCid","findByCid","index","_remove","some","size","CollectionView","once","_initialEvents","_initChildViewStorage","_bufferedChildren","_isBuffering","triggerOnChildren","attachBuffer","_createBuffer","listenTo","_onCollectionAdd","_onCollectionUpdate","sort","_sortViews","at","indexOf","filter","_filteredSortedModels","_shouldAddChild","_destroyEmptyView","_addChild","changes","_removeChildModels","removed","models","checkEmpty","shouldCheckEmpty","removedViews","_getRemovedViews","_updateIndices","_checkEmpty","removingViews","findByModel","_removeChildView","push","greatestIndexedView","_index","_renderChildren","preventRender","canBeRendered","filterChanged","shouldRender","previousModels","_applyModelDeltas","setFilter","currentIds","addedChildNotExists","removeModels","prevModel","_showingEmptyView","anyModelsAdded","filteredOutModels","elsToReorder","viewEls","_appendReorderedChildren","reorderOnSort","reorder","orderChanged","find","item","resortView","_destroyChildren","processedModels","_showEmptyView","_startBuffering","_showCollection","_endBuffering","ChildView","_getChildView","childViewOptions","_getChildViewOptions","buildChildView","_proxyChildEvents","addedAt","viewComparator","getViewComparator","Math","min","max","addedModel","_sortModelsBy","splice","_filterModels","comparator","sortBy","EmptyView","_getEmptyView","emptyViewOptions","_emptyViewIndex","addChildView","emptyView","_getView","childView","_createView","_setupChildView","increment","_findGreatestIndexedView","laterView","ChildViewClass","collectionView","buffer","elBuffer","createBuffer","b","_insertBefore","_insertAfter","findPosition","beforeEl","ChildViewContainer","childModels","CompositeView","renderChildren","_isRendering","resetChildViewContainer","compositeView","$container","getChildViewContainer","containerView","$childViewContainer","container","childViewContainer","charAt","substr","MixinFromView","Behavior","behaviorEvents","behaviorHandler","behaviorTriggers","Application","_initRegion","_region","AppRouter","Router","appRoutes","controller","_getController","processAppRoutes","_processOnRoute","route","_addAppRoute","routeName","routeArgs","onRoute","routePath","invert","routeNames","reverse","FEATURES","isEnabled","setEnabled","state","previousMarionette","noConflict","Object","VERSION"],"mappings":"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"}